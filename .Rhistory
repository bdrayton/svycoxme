dplyr::slice_sample(n = 50),
pop |>
dplyr::filter(stratum == 1) |>
dplyr::distinct(stratum, id) |>
dplyr::mutate(prob = 50/dplyr::n()) |>
dplyr::slice_sample(n = 50)
) |> dplyr::select(stratum, id, prob)
sample_data2 <- dplyr::left_join(sample_clusters, pop, by = c("stratum", "id")) |>
# dplyr::mutate(weight = 1/prob, scaled_weight = (1/prob)/(1/mean(prob)),
#               M1M2 = interaction(M1, M2))
dplyr::mutate(weight = 1/prob, scaled_weight = (1/prob)/(1/mean(prob)))
d2 <- survey::svydesign(~id, weights = ~scaled_weight, strata = ~stratum, data = sample_data2)
d3 <- survey::as.svrepdesign(d2)
svycoxme_fit <- svycoxme(survival::Surv(stat_time, stat) ~ X1+X2+X3+stratum+(1|M1),
design = d2)
svycoxme_fit <- svycoxme(survival::Surv(stat_time, stat) ~ X1+X2+X3+stratum+(1|M1),
design = d2)
devtools::load_all(".")
svycoxme_fit <- svycoxme(survival::Surv(stat_time, stat) ~ X1+X2+X3+stratum+(1|M1),
design = d2)
devtools::load_all(".")
svycoxme_fit <- svycoxme(survival::Surv(stat_time, stat) ~ X1+X2+X3+stratum+(1|M1),
design = d2)
debugonce(svycoxme)
svycoxme_fit <- svycoxme(survival::Surv(stat_time, stat) ~ X1+X2+X3+stratum+(1|M1),
design = d2)
debugonce(svycoxme)
devtools::load_all(".")
debugonce(svycoxme)
svycoxme_fit <- svycoxme(survival::Surv(stat_time, stat) ~ X1+X2+X3+stratum+(1|M1),
design = d2)
subset
svycoxme_fit <- svycoxme(survival::Surv(stat_time, stat) ~ X1+X2+X3+stratum+(1|M1),
design = d2)
install.packages(pryr)
install.packages("pryr")
?pryr
vignette(package = "pryr")
??pryr
library(pryr)
pryr
modify_call
debugonce(residuals.coxme)
svycoxme_fit <- svycoxme(survival::Surv(stat_time, stat) ~ X1+X2+X3+stratum+(1|M1),
design = d2)
formals(survival::coxph)
names(coxph_call)
formalArgs(coxph)
formalArgs(survivial::coxph)
formalArgs(survival::coxph)
formalArgs
devtools::load_all(".")
svycoxme_fit <- svycoxme(survival::Surv(stat_time, stat) ~ X1+X2+X3+stratum+(1|M1),
design = d2)
debugonce(residuals.coxme)
svycoxme_fit <- svycoxme(survival::Surv(stat_time, stat) ~ X1+X2+X3+stratum+(1|M1),
design = d2)
to_drop
call_args
coxph_call
# drop anything in the call that isn't in the formals for coxph
# e.g. design
to_drop <- call_args[!(call_args %in% formalArgs(survival::coxph))]
to_drop
call_args <- names(coxph_call)[-1]
# drop anything in the call that isn't in the formals for coxph
# e.g. design
to_drop <- call_args[!(call_args %in% formalArgs(survival::coxph))]
to_drop
svycoxme_fit <- svycoxme(survival::Surv(stat_time, stat) ~ X1+X2+X3+stratum+(1|M1),
design = d2)
devtools::load_all(".")
svycoxme_fit <- svycoxme(survival::Surv(stat_time, stat) ~ X1+X2+X3+stratum+(1|M1),
design = d2)
summary(svycoxme_fit)
svycoxme_fit
svycoxme_fit
str(svycoxme_fit)
coefficients(svycoxme_fit)
confint(svycoxme_fit)
var(svycoxme_fit)
vcov(svycoxme_fit)
svycoxme_fit$var
svycoxme_fit$vcoef
svycoxme_fit$variance
dim(svycoxme_fit$variance)
svycoxme_fit$variance[101:104, 101:104]
svycoxme_fit$var
diag(svycoxme_fit$variance[101:104, 101:104])
diag(svycoxme_fit$var)
coxme_fit <- coxme::coxme(survival::Surv(stat_time, stat) ~ X1+X2+X3+stratum+(1|M1),
data = sample_data2, weights = scaled_weight)
one_rep <- function(){
sample_clusters <- dplyr::bind_rows(
pop |>
dplyr::filter(stratum == 0) |>
dplyr::distinct(stratum, id) |>
dplyr::mutate(prob = 50/dplyr::n()) |>
dplyr::slice_sample(n = 50),
pop |>
dplyr::filter(stratum == 1) |>
dplyr::distinct(stratum, id) |>
dplyr::mutate(prob = 50/dplyr::n()) |>
dplyr::slice_sample(n = 50)
) |> dplyr::select(stratum, id, prob)
sample_data2 <- dplyr::left_join(sample_clusters, pop, by = c("stratum", "id")) |>
# dplyr::mutate(weight = 1/prob, scaled_weight = (1/prob)/(1/mean(prob)),
#               M1M2 = interaction(M1, M2))
dplyr::mutate(weight = 1/prob, scaled_weight = (1/prob)/(1/mean(prob)))
d2 <- survey::svydesign(~id, weights = ~scaled_weight, strata = ~stratum, data = sample_data2)
svycoxme_fit <- svycoxme(survival::Surv(stat_time, stat) ~ X1+X2+X3+stratum+(1|M1),
design = d2)
coxme_fit <- coxme::coxme(survival::Surv(stat_time, stat) ~ X1+X2+X3+stratum+(1|M1),
data = sample_data2, weights = scaled_weight)
cbind(svycoxme = coef(svycoxme_fit),
coxme = coef(coxme_fit))
#
#   svycoxme_theta <- unlist(coxme::VarCorr(svycoxme_fit))
#
#   ci = svycoxme_theta + sqrt(diag(svycoxme_fit$vvar)) %o% qt(c(0.025, 0.975), Inf)
#
#   colnames(ci) <- c("lower", "upper")
#
#   data.frame(coxme_theta = unlist(coxme::VarCorr(coxme_fit)),
#              svycoxme_theta = svycoxme_theta, ci)
}
one_rep()
one_rep()
one_rep()
one_rep()
reps <- replicate(100, one_rep(), simplify = FALSE)
one_rep <- function(){
sample_clusters <- dplyr::bind_rows(
pop |>
dplyr::filter(stratum == 0) |>
dplyr::distinct(stratum, id) |>
dplyr::mutate(prob = 50/dplyr::n()) |>
dplyr::slice_sample(n = 50),
pop |>
dplyr::filter(stratum == 1) |>
dplyr::distinct(stratum, id) |>
dplyr::mutate(prob = 50/dplyr::n()) |>
dplyr::slice_sample(n = 50)
) |> dplyr::select(stratum, id, prob)
sample_data2 <- dplyr::left_join(sample_clusters, pop, by = c("stratum", "id")) |>
# dplyr::mutate(weight = 1/prob, scaled_weight = (1/prob)/(1/mean(prob)),
#               M1M2 = interaction(M1, M2))
dplyr::mutate(weight = 1/prob, scaled_weight = (1/prob)/(1/mean(prob)))
d2 <- survey::svydesign(~id, weights = ~scaled_weight, strata = ~stratum, data = sample_data2)
svycoxme_fit <- svycoxme(survival::Surv(stat_time, stat) ~ X1+X2+X3+stratum+(1|M1),
design = d2)
coxme_fit <- coxme::coxme(survival::Surv(stat_time, stat) ~ X1+X2+X3+stratum+(1|M1),
data = sample_data2, weights = scaled_weight)
cbind(svycoxme = ,
)
#
#   svycoxme_theta <- unlist(coxme::VarCorr(svycoxme_fit))
#
#   ci = svycoxme_theta + sqrt(diag(svycoxme_fit$vvar)) %o% qt(c(0.025, 0.975), Inf)
#
#   colnames(ci) <- c("lower", "upper")
#
temp <- coef(svycoxme_fit)
data.frame(coef = names(temp),
svycoxme = temp,
coxme = coef(coxme_fit))
}
one_rep()
one_rep <- function(){
sample_clusters <- dplyr::bind_rows(
pop |>
dplyr::filter(stratum == 0) |>
dplyr::distinct(stratum, id) |>
dplyr::mutate(prob = 50/dplyr::n()) |>
dplyr::slice_sample(n = 50),
pop |>
dplyr::filter(stratum == 1) |>
dplyr::distinct(stratum, id) |>
dplyr::mutate(prob = 50/dplyr::n()) |>
dplyr::slice_sample(n = 50)
) |> dplyr::select(stratum, id, prob)
sample_data2 <- dplyr::left_join(sample_clusters, pop, by = c("stratum", "id")) |>
# dplyr::mutate(weight = 1/prob, scaled_weight = (1/prob)/(1/mean(prob)),
#               M1M2 = interaction(M1, M2))
dplyr::mutate(weight = 1/prob, scaled_weight = (1/prob)/(1/mean(prob)))
d2 <- survey::svydesign(~id, weights = ~scaled_weight, strata = ~stratum, data = sample_data2)
svycoxme_fit <- svycoxme(survival::Surv(stat_time, stat) ~ X1+X2+X3+stratum+(1|M1),
design = d2)
coxme_fit <- coxme::coxme(survival::Surv(stat_time, stat) ~ X1+X2+X3+stratum+(1|M1),
data = sample_data2, weights = scaled_weight)
#
#   svycoxme_theta <- unlist(coxme::VarCorr(svycoxme_fit))
#
#   ci = svycoxme_theta + sqrt(diag(svycoxme_fit$vvar)) %o% qt(c(0.025, 0.975), Inf)
#
#   colnames(ci) <- c("lower", "upper")
#
temp <- coef(svycoxme_fit)
data.frame(coef = names(temp),
svycoxme = temp,
coxme = coef(coxme_fit))
}
one_rep()
res <- Reduce(rbind, reps)
res$coef = c("X1", "X2", "X3", "stratum")
res <- Reduce(rbind, reps) |> data.frame()
res
res$coef = c("X1", "X2", "X3", "stratum")
library(ggplot2)
res |>
tidyr::pivot_longer(cols = c("svycoxme", "coxme"))
res |>
tidyr::pivot_longer(cols = c("svycoxme", "coxme")) |>
ggplot(res, aes(value, colour = name)) + geom_density() +
facet_grid(rows = vars(coef))
res |>
tidyr::pivot_longer(cols = c("svycoxme", "coxme")) |>
ggplot(aes(value, colour = name)) + geom_density() +
facet_grid(rows = vars(coef))
class(d2)
devtools::load_all(".")
one_rep()
one_rep()
debugonce(svycoxme)
debugonce(one_rep)
one_rep()
mean(data$.survey.prob.weights)
range(data$.survey.prob.weights)
range(weights(design))
one_rep <- function(){
sample_clusters <- dplyr::bind_rows(
pop |>
dplyr::filter(stratum == 0) |>
dplyr::distinct(stratum, id) |>
dplyr::mutate(prob = 50/dplyr::n()) |>
dplyr::slice_sample(n = 50),
pop |>
dplyr::filter(stratum == 1) |>
dplyr::distinct(stratum, id) |>
dplyr::mutate(prob = 50/dplyr::n()) |>
dplyr::slice_sample(n = 50)
) |> dplyr::select(stratum, id, prob)
sample_data2 <- dplyr::left_join(sample_clusters, pop, by = c("stratum", "id")) |>
# dplyr::mutate(weight = 1/prob, scaled_weight = (1/prob)/(1/mean(prob)),
#               M1M2 = interaction(M1, M2))
dplyr::mutate(weight = 1/prob, scaled_weight = (1/prob)/(1/mean(prob)))
d2 <- survey::svydesign(~id, weights = ~weight, strata = ~stratum, data = sample_data2)
d3 <- survey::as.svrepdesign(d2)
#
# svycoxme_fit <- svycoxme(survival::Surv(stat_time, stat) ~ X1+X2+X3+stratum+(1|M1)+(1|M1M2),
#                          design = d3)
#
# coxme_fit <- coxme::coxme(survival::Surv(stat_time, stat) ~ X1+X2+X3+stratum+(1|M1)+(1|M1M2),
#                           data = sample_data2, weights = scaled_weight)
#
svycoxme_fit <- svycoxme(survival::Surv(stat_time, stat) ~ X1+X2+X3+stratum+(1|M1),
design = d3)
coxme_fit <- coxme::coxme(survival::Surv(stat_time, stat) ~ X1+X2+X3+stratum+(1|M1),
data = sample_data2, weights = scaled_weight)
svycoxme_theta <- unlist(coxme::VarCorr(svycoxme_fit))
ci = svycoxme_theta + sqrt(diag(svycoxme_fit$vvar)) %o% qt(c(0.025, 0.975), Inf)
colnames(ci) <- c("lower", "upper")
data.frame(coxme_theta = unlist(coxme::VarCorr(coxme_fit)),
svycoxme_theta = svycoxme_theta, ci)
}
one_rep()
one_rep <- function(){
sample_clusters <- dplyr::bind_rows(
pop |>
dplyr::filter(stratum == 0) |>
dplyr::distinct(stratum, id) |>
dplyr::mutate(prob = 50/dplyr::n()) |>
dplyr::slice_sample(n = 50),
pop |>
dplyr::filter(stratum == 1) |>
dplyr::distinct(stratum, id) |>
dplyr::mutate(prob = 50/dplyr::n()) |>
dplyr::slice_sample(n = 50)
) |> dplyr::select(stratum, id, prob)
sample_data2 <- dplyr::left_join(sample_clusters, pop, by = c("stratum", "id")) |>
# dplyr::mutate(weight = 1/prob, scaled_weight = (1/prob)/(1/mean(prob)),
#               M1M2 = interaction(M1, M2))
dplyr::mutate(weight = 1/prob, scaled_weight = (1/prob)/(1/mean(prob)))
d2 <- survey::svydesign(~id, weights = ~weight, strata = ~stratum, data = sample_data2)
svycoxme_fit <- svycoxme(survival::Surv(stat_time, stat) ~ X1+X2+X3+stratum+(1|M1),
design = d2)
coxme_fit <- coxme::coxme(survival::Surv(stat_time, stat) ~ X1+X2+X3+stratum+(1|M1),
data = sample_data2, weights = scaled_weight)
#
#   svycoxme_theta <- unlist(coxme::VarCorr(svycoxme_fit))
#
#   ci = svycoxme_theta + sqrt(diag(svycoxme_fit$vvar)) %o% qt(c(0.025, 0.975), Inf)
#
#   colnames(ci) <- c("lower", "upper")
#
temp <- coef(svycoxme_fit)
data.frame(coef = names(temp),
svycoxme = temp,
coxme = coef(coxme_fit))
}
one_rep()
one_rep <- function(){
sample_clusters <- dplyr::bind_rows(
pop |>
dplyr::filter(stratum == 0) |>
dplyr::distinct(stratum, id) |>
dplyr::mutate(prob = 50/dplyr::n()) |>
dplyr::slice_sample(n = 50),
pop |>
dplyr::filter(stratum == 1) |>
dplyr::distinct(stratum, id) |>
dplyr::mutate(prob = 50/dplyr::n()) |>
dplyr::slice_sample(n = 50)
) |> dplyr::select(stratum, id, prob)
sample_data2 <- dplyr::left_join(sample_clusters, pop, by = c("stratum", "id")) |>
dplyr::group_by(stratum) |>
# dplyr::mutate(weight = 1/prob, scaled_weight = (1/prob)/(1/mean(prob)),
#               M1M2 = interaction(M1, M2))
dplyr::mutate(weight = 1/prob, scaled_weight = (1/prob)/(1/mean(prob))) |>
dplyr::ungroup()
d2 <- survey::svydesign(~id, weights = ~weight, strata = ~stratum, data = sample_data2)
svycoxme_fit <- svycoxme(survival::Surv(stat_time, stat) ~ X1+X2+X3+stratum+(1|M1),
design = d2)
coxme_fit <- coxme::coxme(survival::Surv(stat_time, stat) ~ X1+X2+X3+stratum+(1|M1),
data = sample_data2, weights = scaled_weight)
#
#   svycoxme_theta <- unlist(coxme::VarCorr(svycoxme_fit))
#
#   ci = svycoxme_theta + sqrt(diag(svycoxme_fit$vvar)) %o% qt(c(0.025, 0.975), Inf)
#
#   colnames(ci) <- c("lower", "upper")
#
temp <- coef(svycoxme_fit)
data.frame(coef = names(temp),
svycoxme = temp,
coxme = coef(coxme_fit))
}
one_rep()
one_rep()
one_rep()
debugonce(svycoxme.survey.design)
one_rep()
g
the_weights <<- data$.survey.prob.weights
devtools::load_all(".")
sample_clusters <- dplyr::bind_rows(
pop |>
dplyr::filter(stratum == 0) |>
dplyr::distinct(stratum, id) |>
dplyr::mutate(prob = 50/dplyr::n()) |>
dplyr::slice_sample(n = 50),
pop |>
dplyr::filter(stratum == 1) |>
dplyr::distinct(stratum, id) |>
dplyr::mutate(prob = 50/dplyr::n()) |>
dplyr::slice_sample(n = 50)
) |> dplyr::select(stratum, id, prob)
sample_data2 <- dplyr::left_join(sample_clusters, pop, by = c("stratum", "id")) |>
dplyr::group_by(stratum) |>
# dplyr::mutate(weight = 1/prob, scaled_weight = (1/prob)/(1/mean(prob)),
#               M1M2 = interaction(M1, M2))
dplyr::mutate(weight = 1/prob, scaled_weight = (1/prob)/(1/mean(prob))) |>
dplyr::ungroup() |>
dplyr::mutate(scaled_weight = 1)
d2 <- survey::svydesign(~id, weights = ~scaled_weight, strata = ~stratum, data = sample_data2)
svycoxme_fit <- svycoxme(survival::Surv(stat_time, stat) ~ X1+X2+X3+stratum+(1|M1),
design = d2)
coxme_fit <- coxme::coxme(survival::Surv(stat_time, stat) ~ X1+X2+X3+stratum+(1|M1),
data = sample_data2, weights = scaled_weight)
temp <- coef(svycoxme_fit)
data.frame(coef = names(temp),
svycoxme = temp,
coxme = coef(coxme_fit))
sample_data2 <- dplyr::left_join(sample_clusters, pop, by = c("stratum", "id")) |>
dplyr::mutate(weight = 1/prob, scaled_weight = (1/prob)/(1/mean(prob))) |>
dplyr::ungroup()
d2 <- survey::svydesign(~id, weights = ~scaled_weight, strata = ~stratum, data = sample_data2)
svycoxme_fit <- svycoxme(survival::Surv(stat_time, stat) ~ X1+X2+X3+stratum+(1|M1),
design = d2, rescale = FALSE)
devtools::load_all(".")
sample_data2 <- dplyr::left_join(sample_clusters, pop, by = c("stratum", "id")) |>
dplyr::mutate(weight = 1/prob, scaled_weight = (1/prob)/(1/mean(prob))) |>
dplyr::ungroup()
d2 <- survey::svydesign(~id, weights = ~scaled_weight, strata = ~stratum, data = sample_data2)
svycoxme_fit <- svycoxme(survival::Surv(stat_time, stat) ~ X1+X2+X3+stratum+(1|M1),
design = d2, rescale = FALSE)
coxme_fit <- coxme::coxme(survival::Surv(stat_time, stat) ~ X1+X2+X3+stratum+(1|M1),
data = sample_data2, weights = scaled_weight)
temp <- coef(svycoxme_fit)
data.frame(coef = names(temp),
svycoxme = temp,
coxme = coef(coxme_fit))
one_rep <- function(){
sample_clusters <- dplyr::bind_rows(
pop |>
dplyr::filter(stratum == 0) |>
dplyr::distinct(stratum, id) |>
dplyr::mutate(prob = 50/dplyr::n()) |>
dplyr::slice_sample(n = 50),
pop |>
dplyr::filter(stratum == 1) |>
dplyr::distinct(stratum, id) |>
dplyr::mutate(prob = 50/dplyr::n()) |>
dplyr::slice_sample(n = 50)
) |> dplyr::select(stratum, id, prob)
sample_data2 <- dplyr::left_join(sample_clusters, pop, by = c("stratum", "id")) |>
dplyr::mutate(weight = 1/prob, scaled_weight = (1/prob)/(1/mean(prob))) |>
dplyr::ungroup()
d2 <- survey::svydesign(~id, weights = ~scaled_weight, strata = ~stratum, data = sample_data2)
svycoxme_fit <- svycoxme(survival::Surv(stat_time, stat) ~ X1+X2+X3+stratum+(1|M1),
design = d2, rescale = FALSE)
coxme_fit <- coxme::coxme(survival::Surv(stat_time, stat) ~ X1+X2+X3+stratum+(1|M1),
data = sample_data2, weights = scaled_weight)
#   ci = svycoxme_theta + sqrt(diag(svycoxme_fit$vvar)) %o% qt(c(0.025, 0.975), Inf)
#
#   colnames(ci) <- c("lower", "upper")
#
temp <- coef(svycoxme_fit)
data.frame(coef = names(temp),
svycoxme = temp,
coxme = coef(coxme_fit))
}
one_rep()
one_rep()
confint(svycoxme_fit)
confint(coxme_fit)
rbind(confint(svycoxme_fit), confint(coxme_fit))
point <- c(coef(svycoxme_fit), coef(coxme_fit))
names(point)
data.frame(coef = names(point),
ci = ci)
ci <- rbind(confint(svycoxme_fit), confint(coxme_fit))
colnames(ci) <- c("lower", "upper")
data.frame(coef = names(point),
ci = ci)
one_rep <- function(){
sample_clusters <- dplyr::bind_rows(
pop |>
dplyr::filter(stratum == 0) |>
dplyr::distinct(stratum, id) |>
dplyr::mutate(prob = 50/dplyr::n()) |>
dplyr::slice_sample(n = 50),
pop |>
dplyr::filter(stratum == 1) |>
dplyr::distinct(stratum, id) |>
dplyr::mutate(prob = 50/dplyr::n()) |>
dplyr::slice_sample(n = 50)
) |> dplyr::select(stratum, id, prob)
sample_data2 <- dplyr::left_join(sample_clusters, pop, by = c("stratum", "id")) |>
dplyr::mutate(weight = 1/prob, scaled_weight = (1/prob)/(1/mean(prob))) |>
dplyr::ungroup()
d2 <- survey::svydesign(~id, weights = ~scaled_weight, strata = ~stratum, data = sample_data2)
# weights are already rescaled.
svycoxme_fit <- svycoxme(survival::Surv(stat_time, stat) ~ X1+X2+X3+stratum+(1|M1),
design = d2, rescale = FALSE)
coxme_fit <- coxme::coxme(survival::Surv(stat_time, stat) ~ X1+X2+X3+stratum+(1|M1),
data = sample_data2, weights = scaled_weight)
ci <- rbind(confint(svycoxme_fit), confint(coxme_fit))
colnames(ci) <- c("lower", "upper")
point <- c(coef(svycoxme_fit), coef(coxme_fit))
data.frame(fun  = rep(c("svycoxme", "coxme"), each = 4),
coef = names(point),
ci   = ci)
}
one_rep()
reps <- replicate(10, one_rep(), simplify = FALSE)
res <- Reduce(rbind, reps) |> data.frame()
res
one_rep <- function(){
sample_clusters <- dplyr::bind_rows(
pop |>
dplyr::filter(stratum == 0) |>
dplyr::distinct(stratum, id) |>
dplyr::mutate(prob = 50/dplyr::n()) |>
dplyr::slice_sample(n = 50),
pop |>
dplyr::filter(stratum == 1) |>
dplyr::distinct(stratum, id) |>
dplyr::mutate(prob = 50/dplyr::n()) |>
dplyr::slice_sample(n = 50)
) |> dplyr::select(stratum, id, prob)
sample_data2 <- dplyr::left_join(sample_clusters, pop, by = c("stratum", "id")) |>
dplyr::mutate(weight = 1/prob, scaled_weight = (1/prob)/(1/mean(prob))) |>
dplyr::ungroup()
d2 <- survey::svydesign(~id, weights = ~scaled_weight, strata = ~stratum, data = sample_data2)
# weights are already rescaled.
svycoxme_fit <- svycoxme(survival::Surv(stat_time, stat) ~ X1+X2+X3+stratum+(1|M1),
design = d2, rescale = FALSE)
coxme_fit <- coxme::coxme(survival::Surv(stat_time, stat) ~ X1+X2+X3+stratum+(1|M1),
data = sample_data2, weights = scaled_weight)
ci <- rbind(confint(svycoxme_fit), confint(coxme_fit))
colnames(ci) <- c("lower", "upper")
point <- c(coef(svycoxme_fit), coef(coxme_fit))
data.frame(fun  = rep(c("svycoxme", "coxme"), each = 4),
coef = names(point),
ci   = ci,
correct_value = c(1, -0.7, 0.5, -0.5))
}
one_rep()
reps <- replicate(10, one_rep(), simplify = FALSE)
res <- Reduce(rbind, reps) |> data.frame() |>
dplyr::mutate(hit = correct_value >= ci.lower & correct_value <= ci.upper)
res
res |>
dplyr::group_by(fun, coef) |>
dplyr::summarise(mean(hit))
reps <- replicate(1000, one_rep(), simplify = FALSE)
res <- Reduce(rbind, reps) |> data.frame() |>
dplyr::mutate(hit = correct_value >= ci.lower & correct_value <= ci.upper)
res |>
dplyr::group_by(fun, coef) |>
dplyr::summarise(mean(hit))
