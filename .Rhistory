df <- plyr::ldply(non_error_fits, shape_res)
df2 <- df %>%
mutate(method = factor(method,
levels = c("svycoxme_JK1",
"svycoxme_bootstrap1000",
"svycoxme_subbootstrap1000",
"svycoxme_mrbbootstrap1000",
"svycoxme",
"coxme"),
labels = c("Jackknife",
"Bootstrap",
"Subbootstrap",
"MRBBootstrap",
"Sandwich",
"Hessian")),
cluster_size = factor(cluster_size),
n_clusters_in_sample = factor(n_clusters_in_sample))
# density of beta_2, theta = 1, 20 cluster samples, of 10 observations.
dsub = df2 %>%
filter(theta == 1, n_clusters_in_sample == 20, cluster_size == 10, covariate == "X2")
coverage_summary2 %>%
filter(cluster_size == 10) %>%
ggplot(aes(estimated_se, method,
colour = n_clusters_in_sample)) +
geom_point(position = position_dodge(width = 0.0), shape = 1) +
facet_grid(cols = vars(theta), rows = vars(covariate), labeller = label_parsed) +
labs(y = "Variance estimator", x = "Mean standard error", colour = "Clusters sampled") +
theme_bw() + theme(legend.position = "bottom", strip.text.y = element_text(angle = 0)) +
geom_vline(data = filter(summary_stats, cluster_size == 10, n_clusters_in_sample != 1000),
aes(xintercept = se, colour = n_clusters_in_sample),
linetype = 2) +
scale_colour_manual(values = cbPalette)
# coverage by number of clusters, by covariate and theta, and method, and sample size
coverage_summary2 <- df2 %>%
group_by(method, theta, covariate, n_clusters_in_sample, cluster_size)  %>%
summarise(coverage = mean(hit, na.rm = TRUE),
n = n(),
coverage_se = sqrt(coverage * (1-coverage) / n),
coverage_lower = coverage + qnorm(0.025) * coverage_se,
coverage_upper = coverage + qnorm(0.975) * coverage_se,
mean_coef = mean(coefs),
true_coefs = first(true_coefs),
empirical_se = sqrt(mean((coefs-true_coefs)^2)),
estimated_se = mean(sqrt(variance)),
prop_nas = sum(is.na(hit))/n,
.groups = "drop") %>%
mutate(old_theta = theta,
theta = factor(theta, levels = c(0.0001, 0.5, 1),
labels = c(bquote(theta*"=0.0001"),
bquote(theta*"=0.5"),
bquote(theta*"=1"))),
old_covariate = covariate,
covariate = factor(covariate, levels = c("X1", "X2", "X3"),
labels = c(bquote(beta[1]),
bquote(beta[2]),
bquote(beta[3]))))
coverage_summary2 %>%
filter(cluster_size == 10) %>%
ggplot(aes(estimated_se, method,
colour = n_clusters_in_sample)) +
geom_point(position = position_dodge(width = 0.0), shape = 1) +
facet_grid(cols = vars(theta), rows = vars(covariate), labeller = label_parsed) +
labs(y = "Variance estimator", x = "Mean standard error", colour = "Clusters sampled") +
theme_bw() + theme(legend.position = "bottom", strip.text.y = element_text(angle = 0)) +
geom_vline(data = filter(summary_stats, cluster_size == 10, n_clusters_in_sample != 1000),
aes(xintercept = se, colour = n_clusters_in_sample),
linetype = 2) +
scale_colour_manual(values = cbPalette)
summary_stats <- readRDS(summary_stats_path) %>%
mutate(old_theta = theta,
theta = factor(theta, levels = c(0.0001, 0.5, 1),
labels = c(bquote(theta*"=0.0001"),
bquote(theta*"=0.5"),
bquote(theta*"=1"))),
old_covariate = covariate,
covariate = factor(covariate, levels = c("X1", "X2", "X3"),
labels = c(bquote(beta[1]),
bquote(beta[2]),
bquote(beta[3]))),
emp_se_lower = emp_se + qnorm(0.025)*emp_se_se,
emp_se_upper = emp_se + qnorm(0.975)*emp_se_se)
coverage_summary2 %>%
filter(cluster_size == 10) %>%
ggplot(aes(estimated_se, method,
colour = n_clusters_in_sample)) +
geom_point(position = position_dodge(width = 0.0), shape = 1) +
facet_grid(cols = vars(theta), rows = vars(covariate), labeller = label_parsed) +
labs(y = "Variance estimator", x = "Mean standard error", colour = "Clusters sampled") +
theme_bw() + theme(legend.position = "bottom", strip.text.y = element_text(angle = 0)) +
geom_vline(data = filter(summary_stats, cluster_size == 10, n_clusters_in_sample != 1000),
aes(xintercept = se, colour = n_clusters_in_sample),
linetype = 2) +
geom_rect(aes(xmin = emp_se_lower, xmax = emp_se_upper, ymin = 0, ymax = Inf))
summary_stats_sub = filter(summary_stats, cluster_size == 10, n_clusters_in_sample != 1000)
coverage_summary2 %>%
filter(cluster_size == 10) %>%
ggplot(aes(estimated_se, method,
colour = n_clusters_in_sample)) +
geom_point(position = position_dodge(width = 0.0), shape = 1) +
facet_grid(cols = vars(theta), rows = vars(covariate), labeller = label_parsed) +
labs(y = "Variance estimator", x = "Mean standard error", colour = "Clusters sampled") +
theme_bw() + theme(legend.position = "bottom", strip.text.y = element_text(angle = 0)) +
geom_vline(data = summary_stats_sub,
aes(xintercept = se, colour = n_clusters_in_sample),
linetype = 2) +
geom_rect(data = summary_stats_sub,
aes(xmin = emp_se_lower, xmax = emp_se_upper, ymin = 0, ymax = Inf))
coverage_summary2 %>%
filter(cluster_size == 10) %>%
ggplot(aes(estimated_se, method,
colour = n_clusters_in_sample)) +
geom_point(position = position_dodge(width = 0.0), shape = 1) +
facet_grid(cols = vars(theta), rows = vars(covariate), labeller = label_parsed) +
labs(y = "Variance estimator", x = "Mean standard error", colour = "Clusters sampled") +
theme_bw() + theme(legend.position = "bottom", strip.text.y = element_text(angle = 0)) +
geom_vline(data = summary_stats_sub,
aes(xintercept = emp_se, colour = n_clusters_in_sample),
linetype = 2) +
geom_rect(data = summary_stats_sub,
aes(xmin = emp_se_lower, xmax = emp_se_upper, ymin = 0, ymax = Inf)) +
scale_colour_manual(values = cbPalette)
coverage_summary2 %>% names()
summary_stats_sub = filter(summary_stats, cluster_size == 10, n_clusters_in_sample != 1000)
coverage_summary2 %>%
filter(cluster_size == 10) %>%
ggplot(aes(estimated_se, method,
colour = n_clusters_in_sample)) +
geom_point(position = position_dodge(width = 0.0), shape = 1) +
facet_grid(cols = vars(theta), rows = vars(covariate), labeller = label_parsed) +
labs(y = "Variance estimator", x = "Mean standard error", colour = "Clusters sampled") +
theme_bw() + theme(legend.position = "bottom", strip.text.y = element_text(angle = 0)) +
scale_colour_manual(values = cbPalette) +
geom_vline(data = summary_stats_sub,
aes(xintercept = emp_se, colour = n_clusters_in_sample),
linetype = 2) +
geom_rect(data = summary_stats_sub,
aes(xmin = emp_se_lower, xmax = emp_se_upper, ymin = 0, ymax = Inf))
coverage_summary2 %>%
filter(cluster_size == 10) %>%
ggplot(aes(estimated_se, method,
colour = n_clusters_in_sample)) +
geom_point(position = position_dodge(width = 0.0), shape = 1) +
facet_grid(cols = vars(theta), rows = vars(covariate), labeller = label_parsed) +
labs(y = "Variance estimator", x = "Mean standard error", colour = "Clusters sampled") +
theme_bw() + theme(legend.position = "bottom", strip.text.y = element_text(angle = 0)) +
scale_colour_manual(values = cbPalette)
coverage_summary2 %>%
filter(cluster_size == 10) %>%
ggplot(aes(estimated_se, method,
colour = n_clusters_in_sample)) +
geom_point(position = position_dodge(width = 0.0), shape = 1) +
facet_grid(cols = vars(theta), rows = vars(covariate), labeller = label_parsed) +
labs(y = "Variance estimator", x = "Mean standard error", colour = "Clusters sampled") +
theme_bw() + theme(legend.position = "bottom", strip.text.y = element_text(angle = 0)) +
scale_colour_manual(values = cbPalette) +
geom_vline(data = summary_stats_sub,
aes(xintercept = emp_se, colour = n_clusters_in_sample),
linetype = 2, x = emp_se) +
geom_rect(data = summary_stats_sub,
aes(xmin = emp_se_lower, xmax = emp_se_upper, ymin = 0, ymax = Inf, x = emp_se))
coverage_summary2 %>%
filter(cluster_size == 10) %>%
ggplot(aes(estimated_se, method,
colour = n_clusters_in_sample)) +
geom_point(position = position_dodge(width = 0.0), shape = 1) +
facet_grid(cols = vars(theta), rows = vars(covariate), labeller = label_parsed) +
labs(y = "Variance estimator", x = "Mean standard error", colour = "Clusters sampled") +
theme_bw() + theme(legend.position = "bottom", strip.text.y = element_text(angle = 0)) +
scale_colour_manual(values = cbPalette) +
geom_vline(data = summary_stats_sub,
aes(xintercept = emp_se, colour = n_clusters_in_sample, x = emp_se),
linetype = 2) +
geom_rect(data = summary_stats_sub,
aes(xmin = emp_se_lower, xmax = emp_se_upper, ymin = 0, ymax = Inf, x = emp_se))
coverage_summary2 %>%
filter(cluster_size == 10) %>%
ggplot(aes(estimated_se, method,
colour = n_clusters_in_sample)) +
geom_point(position = position_dodge(width = 0.0), shape = 1) +
facet_grid(cols = vars(theta), rows = vars(covariate), labeller = label_parsed) +
labs(y = "Variance estimator", x = "Mean standard error", colour = "Clusters sampled") +
theme_bw() + theme(legend.position = "bottom", strip.text.y = element_text(angle = 0)) +
scale_colour_manual(values = cbPalette) +
geom_vline(data = summary_stats_sub,
aes(xintercept = emp_se, colour = n_clusters_in_sample),
linetype = 2, inherit.aes = FALSE) +
geom_rect(data = summary_stats_sub,
aes(xmin = emp_se_lower, xmax = emp_se_upper, ymin = 0, ymax = Inf), inherit.aes = FALSE)
coverage_summary2 %>%
filter(cluster_size == 10) %>%
ggplot(aes(estimated_se, method,
colour = n_clusters_in_sample)) +
geom_point(position = position_dodge(width = 0.0), shape = 1) +
facet_grid(cols = vars(theta), rows = vars(covariate), labeller = label_parsed) +
labs(y = "Variance estimator", x = "Mean standard error", colour = "Clusters sampled") +
theme_bw() + theme(legend.position = "bottom", strip.text.y = element_text(angle = 0)) +
scale_colour_manual(values = cbPalette) +
geom_vline(data = summary_stats_sub,
aes(xintercept = emp_se, colour = n_clusters_in_sample),
linetype = 2) +
geom_rect(data = summary_stats_sub,
aes(xmin = emp_se_lower, xmax = emp_se_upper, ymin = 0, ymax = Inf), inherit.aes = FALSE)
coverage_summary2 %>%
filter(cluster_size == 10) %>%
ggplot(aes(estimated_se, method,
colour = n_clusters_in_sample)) +
geom_point(position = position_dodge(width = 0.0), shape = 1) +
facet_grid(cols = vars(theta), rows = vars(covariate), labeller = label_parsed) +
labs(y = "Variance estimator", x = "Mean standard error", colour = "Clusters sampled") +
theme_bw() + theme(legend.position = "bottom", strip.text.y = element_text(angle = 0)) +
scale_colour_manual(values = cbPalette) +
geom_vline(data = summary_stats_sub,
aes(xintercept = emp_se, colour = n_clusters_in_sample),
linetype = 2) +
geom_rect(data = summary_stats_sub,
aes(xmin = emp_se_lower, xmax = emp_se_upper, ymin = 0, ymax = Inf))
coverage_summary2 %>%
filter(cluster_size == 10) %>%
ggplot(aes(estimated_se, method,
colour = n_clusters_in_sample)) +
geom_point(position = position_dodge(width = 0.0), shape = 1) +
facet_grid(cols = vars(theta), rows = vars(covariate), labeller = label_parsed) +
labs(y = "Variance estimator", x = "Mean standard error", colour = "Clusters sampled") +
theme_bw() + theme(legend.position = "bottom", strip.text.y = element_text(angle = 0)) +
scale_colour_manual(values = cbPalette) +
geom_vline(data = summary_stats_sub,
aes(xintercept = emp_se, colour = n_clusters_in_sample),
linetype = 2) +
geom_rect(data = summary_stats_sub,
aes(xmin = emp_se_lower, xmax = emp_se_upper, ymin = 0, ymax = Inf, x = emp_se))
coverage_summary2 %>%
filter(cluster_size == 10) %>%
ggplot(aes(estimated_se, method,
colour = n_clusters_in_sample)) +
geom_point(position = position_dodge(width = 0.0), shape = 1) +
facet_grid(cols = vars(theta), rows = vars(covariate), labeller = label_parsed) +
labs(y = "Variance estimator", x = "Mean standard error", colour = "Clusters sampled") +
theme_bw() + theme(legend.position = "bottom", strip.text.y = element_text(angle = 0)) +
scale_colour_manual(values = cbPalette) +
geom_vline(data = summary_stats_sub,
aes(xintercept = emp_se, colour = n_clusters_in_sample),
linetype = 2) +
geom_rect(data = summary_stats_sub,
aes(xmin = emp_se_lower, xmax = emp_se_upper, ymin = 0, ymax = Inf, colour = n_clusters_in_sample), inherit.aes = FALSE)
coverage_summary2 %>%
filter(cluster_size == 10) %>%
ggplot(aes(estimated_se, method,
colour = n_clusters_in_sample)) +
geom_point(position = position_dodge(width = 0.0), shape = 1) +
facet_grid(cols = vars(theta), rows = vars(covariate), labeller = label_parsed) +
labs(y = "Variance estimator", x = "Mean standard error", colour = "Clusters sampled") +
theme_bw() + theme(legend.position = "bottom", strip.text.y = element_text(angle = 0)) +
scale_colour_manual(values = cbPalette) +
geom_vline(data = summary_stats_sub,
aes(xintercept = emp_se, colour = n_clusters_in_sample),
linetype = 2) +
geom_rect(data = summary_stats_sub,
aes(xmin = emp_se_lower, xmax = emp_se_upper, ymin = 0, ymax = Inf,
fill = n_clusters_in_sample), inherit.aes = FALSE, alpha = 0.1)
coverage_summary2 %>%
filter(cluster_size == 10) %>%
ggplot(aes(estimated_se, method,
colour = n_clusters_in_sample)) +
geom_point(position = position_dodge(width = 0.0), shape = 1) +
facet_grid(cols = vars(theta), rows = vars(covariate), labeller = label_parsed) +
labs(y = "Variance estimator", x = "Mean standard error", colour = "Clusters sampled") +
theme_bw() + theme(legend.position = "bottom", strip.text.y = element_text(angle = 0)) +
scale_colour_manual(values = cbPalette) +
scale_fill_manual(values = cbPalette) +
geom_vline(data = summary_stats_sub,
aes(xintercept = emp_se, colour = n_clusters_in_sample),
linetype = 2) +
geom_rect(data = summary_stats_sub,
aes(xmin = emp_se_lower, xmax = emp_se_upper, ymin = 0, ymax = Inf,
fill = n_clusters_in_sample), inherit.aes = FALSE, alpha = 0.1)
coverage_summary2 %>%
filter(cluster_size == 10) %>%
ggplot(aes(estimated_se, method,
colour = n_clusters_in_sample)) +
geom_point(position = position_dodge(width = 0.0), shape = 1) +
facet_grid(cols = vars(theta), rows = vars(covariate), labeller = label_parsed) +
labs(y = "Variance estimator", x = "Mean standard error") +
theme_bw() + theme(legend.position = "bottom", strip.text.y = element_text(angle = 0)) +
scale_colour_manual(name = "Clusters sampled", values = cbPalette) +
scale_fill_manual(name = "Clusters sampled", values = cbPalette) +
geom_vline(data = summary_stats_sub,
aes(xintercept = emp_se, colour = n_clusters_in_sample),
linetype = 2) +
geom_rect(data = summary_stats_sub,
aes(xmin = emp_se_lower, xmax = emp_se_upper, ymin = 0, ymax = Inf,
fill = n_clusters_in_sample), inherit.aes = FALSE, alpha = 0.1)
coverage_summary2 %>%
filter(cluster_size == 10) %>%
ggplot(aes(estimated_se, method,
colour = n_clusters_in_sample)) +
geom_point(position = position_dodge(width = 0.0), shape = 1) +
facet_grid(cols = vars(theta), rows = vars(covariate), labeller = label_parsed) +
labs(y = "Variance estimator", x = "Mean standard error") +
theme_bw() + theme(legend.position = "bottom", strip.text.y = element_text(angle = 0),
panel.grid = element_blank()) +
scale_colour_manual(name = "Clusters sampled", values = cbPalette) +
scale_fill_manual(name = "Clusters sampled", values = cbPalette) +
geom_vline(data = summary_stats_sub,
aes(xintercept = emp_se, colour = n_clusters_in_sample),
linetype = 2) +
geom_rect(data = summary_stats_sub,
aes(xmin = emp_se_lower, xmax = emp_se_upper, ymin = 0, ymax = Inf,
fill = n_clusters_in_sample), inherit.aes = FALSE, alpha = 0.1)
coverage_summary2 %>%
filter(cluster_size == 10) %>%
ggplot(aes(estimated_se, method,
colour = n_clusters_in_sample)) +
geom_point(position = position_dodge(width = 0.0), shape = 1) +
facet_grid(cols = vars(theta), rows = vars(covariate), labeller = label_parsed) +
labs(y = "Variance estimator", x = "Mean standard error") +
theme_bw() + theme(legend.position = "bottom", strip.text.y = element_text(angle = 0),
panel.grid.minor = element_blank()) +
scale_colour_manual(name = "Clusters sampled", values = cbPalette) +
scale_fill_manual(name = "Clusters sampled", values = cbPalette) +
geom_vline(data = summary_stats_sub,
aes(xintercept = emp_se, colour = n_clusters_in_sample),
linetype = 2) +
geom_rect(data = summary_stats_sub,
aes(xmin = emp_se_lower, xmax = emp_se_upper, ymin = 0, ymax = Inf,
fill = n_clusters_in_sample), inherit.aes = FALSE, alpha = 0.1)
cairo_pdf(file = "C:/Users/bdra011/Dropbox (Uni of Auckland)/Apps/Overleaf/Thesis/images/meanse_10_scs.pdf")
coverage_summary2 %>%
filter(cluster_size == 10) %>%
ggplot(aes(estimated_se, method,
colour = n_clusters_in_sample)) +
geom_point(position = position_dodge(width = 0.0), shape = 1) +
facet_grid(cols = vars(theta), rows = vars(covariate), labeller = label_parsed) +
labs(y = "Variance estimator", x = "Mean standard error") +
theme_bw() + theme(legend.position = "bottom", strip.text.y = element_text(angle = 0),
panel.grid.minor = element_blank()) +
scale_colour_manual(name = "Clusters sampled", values = cbPalette) +
scale_fill_manual(name = "Clusters sampled", values = cbPalette) +
geom_vline(data = summary_stats_sub,
aes(xintercept = emp_se, colour = n_clusters_in_sample),
linetype = 2) +
geom_rect(data = summary_stats_sub,
aes(xmin = emp_se_lower, xmax = emp_se_upper, ymin = 0, ymax = Inf,
fill = n_clusters_in_sample), inherit.aes = FALSE, alpha = 0.1)
dev.off()
summary_stats_sub = filter(summary_stats, cluster_size == 30, n_clusters_in_sample != 1000)
coverage_summary2 %>%
filter(cluster_size == 30) %>%
ggplot(aes(estimated_se, method,
colour = n_clusters_in_sample)) +
geom_point(position = position_dodge(width = 0.0), shape = 1) +
facet_grid(cols = vars(theta), rows = vars(covariate), labeller = label_parsed) +
labs(y = "Variance estimator", x = "Mean standard error") +
theme_bw() + theme(legend.position = "bottom", strip.text.y = element_text(angle = 0),
panel.grid.minor = element_blank()) +
scale_colour_manual(name = "Clusters sampled", values = cbPalette) +
scale_fill_manual(name = "Clusters sampled", values = cbPalette) +
geom_vline(data = summary_stats_sub,
aes(xintercept = emp_se, colour = n_clusters_in_sample),
linetype = 2) +
geom_rect(data = summary_stats_sub,
aes(xmin = emp_se_lower, xmax = emp_se_upper, ymin = 0, ymax = Inf,
fill = n_clusters_in_sample), inherit.aes = FALSE, alpha = 0.1)
summary_stats_sub = filter(summary_stats, cluster_size == 10, n_clusters_in_sample != 1000)
cairo_pdf(file = "C:/Users/bdra011/Dropbox (Uni of Auckland)/Apps/Overleaf/Thesis/images/meanse_10_scs.pdf")
coverage_summary2 %>%
filter(cluster_size == 10) %>%
ggplot(aes(estimated_se, method,
colour = n_clusters_in_sample)) +
geom_point(position = position_dodge(width = 0.0), shape = 1) +
facet_grid(cols = vars(theta), rows = vars(covariate), labeller = label_parsed) +
labs(y = "Variance estimator", x = "Mean standard error") +
theme_bw() + theme(legend.position = "bottom", strip.text.y = element_text(angle = 0),
panel.grid.minor = element_blank()) +
scale_colour_manual(name = "Clusters sampled", values = cbPalette) +
scale_fill_manual(name = "Clusters sampled", values = cbPalette) +
geom_vline(data = summary_stats_sub,
aes(xintercept = emp_se, colour = n_clusters_in_sample),
linetype = 2) +
geom_rect(data = summary_stats_sub,
aes(xmin = emp_se_lower, xmax = emp_se_upper, ymin = 0, ymax = Inf,
fill = n_clusters_in_sample), inherit.aes = FALSE, alpha = 0.1)
dev.off()
summary_stats_sub = filter(summary_stats, cluster_size == 30, n_clusters_in_sample != 1000)
cairo_pdf(file = "C:/Users/bdra011/Dropbox (Uni of Auckland)/Apps/Overleaf/Thesis/images/meanse_30_scs.pdf")
coverage_summary2 %>%
filter(cluster_size == 30) %>%
ggplot(aes(estimated_se, method,
colour = n_clusters_in_sample)) +
geom_point(position = position_dodge(width = 0.0), shape = 1) +
facet_grid(cols = vars(theta), rows = vars(covariate), labeller = label_parsed) +
labs(y = "Variance estimator", x = "Mean standard error") +
theme_bw() + theme(legend.position = "bottom", strip.text.y = element_text(angle = 0),
panel.grid.minor = element_blank()) +
scale_colour_manual(name = "Clusters sampled", values = cbPalette) +
scale_fill_manual(name = "Clusters sampled", values = cbPalette) +
geom_vline(data = summary_stats_sub,
aes(xintercept = emp_se, colour = n_clusters_in_sample),
linetype = 2) +
geom_rect(data = summary_stats_sub,
aes(xmin = emp_se_lower, xmax = emp_se_upper, ymin = 0, ymax = Inf,
fill = n_clusters_in_sample), inherit.aes = FALSE, alpha = 0.1)
dev.off()
coverage_summary2 %>%
filter(cluster_size == 10) %>%
ggplot(aes(estimated_se, method,
colour = n_clusters_in_sample)) +
geom_point(position = position_dodge(width = 0.0), shape = 1) +
facet_grid(cols = vars(theta), rows = vars(covariate), labeller = label_parsed) +
labs(y = "Variance estimator", x = "Mean standard error") +
theme_bw() + theme(legend.position = "bottom", strip.text.y = element_text(angle = 0),
panel.grid.minor = element_blank()) +
scale_colour_manual(name = "Clusters sampled", values = cbPalette) +
scale_fill_manual(name = "Clusters sampled", values = cbPalette) +
geom_vline(data = summary_stats_sub,
aes(xintercept = emp_se, colour = n_clusters_in_sample),
linetype = 2) +
geom_rect(data = summary_stats_sub,
aes(xmin = emp_se_lower, xmax = emp_se_upper, ymin = 0, ymax = Inf,
fill = n_clusters_in_sample), inherit.aes = FALSE, alpha = 0.2)
summary_stats_sub = filter(summary_stats, cluster_size == 10, n_clusters_in_sample != 1000)
cairo_pdf(file = "C:/Users/bdra011/Dropbox (Uni of Auckland)/Apps/Overleaf/Thesis/images/meanse_10_scs.pdf")
coverage_summary2 %>%
filter(cluster_size == 10) %>%
ggplot(aes(estimated_se, method,
colour = n_clusters_in_sample)) +
geom_point(position = position_dodge(width = 0.0), shape = 1) +
facet_grid(cols = vars(theta), rows = vars(covariate), labeller = label_parsed) +
labs(y = "Variance estimator", x = "Mean standard error") +
theme_bw() + theme(legend.position = "bottom", strip.text.y = element_text(angle = 0),
panel.grid.minor = element_blank()) +
scale_colour_manual(name = "Clusters sampled", values = cbPalette) +
scale_fill_manual(name = "Clusters sampled", values = cbPalette) +
geom_vline(data = summary_stats_sub,
aes(xintercept = emp_se, colour = n_clusters_in_sample),
linetype = 2) +
geom_rect(data = summary_stats_sub,
aes(xmin = emp_se_lower, xmax = emp_se_upper, ymin = 0, ymax = Inf,
fill = n_clusters_in_sample), inherit.aes = FALSE, alpha = 0.2)
dev.off()
summary_stats_sub = filter(summary_stats, cluster_size == 30, n_clusters_in_sample != 1000)
cairo_pdf(file = "C:/Users/bdra011/Dropbox (Uni of Auckland)/Apps/Overleaf/Thesis/images/meanse_30_scs.pdf")
coverage_summary2 %>%
filter(cluster_size == 30) %>%
ggplot(aes(estimated_se, method,
colour = n_clusters_in_sample)) +
geom_point(position = position_dodge(width = 0.0), shape = 1) +
facet_grid(cols = vars(theta), rows = vars(covariate), labeller = label_parsed) +
labs(y = "Variance estimator", x = "Mean standard error") +
theme_bw() + theme(legend.position = "bottom", strip.text.y = element_text(angle = 0),
panel.grid.minor = element_blank()) +
scale_colour_manual(name = "Clusters sampled", values = cbPalette) +
scale_fill_manual(name = "Clusters sampled", values = cbPalette) +
geom_vline(data = summary_stats_sub,
aes(xintercept = emp_se, colour = n_clusters_in_sample),
linetype = 2) +
geom_rect(data = summary_stats_sub,
aes(xmin = emp_se_lower, xmax = emp_se_upper, ymin = 0, ymax = Inf,
fill = n_clusters_in_sample), inherit.aes = FALSE, alpha = 0.2)
dev.off()
coverage_lims = range(c(coverage_summary2$coverage_lower, coverage_summary2$coverage_upper))
cairo_pdf(file = "C:/Users/bdra011/Dropbox (Uni of Auckland)/Apps/Overleaf/Thesis/images/coverage_10_scs2.pdf")
coverage_summary2 %>%
filter(cluster_size == 10) %>%
ggplot(aes(coverage, method, xmin = coverage_lower, xmax = coverage_upper,
colour = n_clusters_in_sample)) +
geom_point(position = position_dodge(width = 0.5)) +
geom_errorbar(width = 0.00, position = position_dodge(width = 0.5)) +
facet_grid(cols = vars(theta), rows = vars(covariate), labeller = label_parsed) +
geom_vline(xintercept = 0.95, linetype = 2) +
labs(y = "Variance estimator", x = "Coverage", colour = "Clusters sampled") +
theme_bw() + theme(legend.position = "bottom", strip.text.y = element_text(angle = 0)) +
scale_colour_manual(values = cbPalette) +
xlim(coverage_lims)
dev.off()
cairo_pdf(file = "C:/Users/bdra011/Dropbox (Uni of Auckland)/Apps/Overleaf/Thesis/images/coverage_30_scs2.pdf")
coverage_summary2 %>%
filter(cluster_size == 30) %>%
ggplot(aes(coverage, method, xmin = coverage_lower, xmax = coverage_upper,
colour = n_clusters_in_sample)) +
geom_point(position = position_dodge(width = 0.5)) +
geom_errorbar(width = 0.00, position = position_dodge(width = 0.5)) +
facet_grid(cols = vars(theta), rows = vars(covariate), labeller = label_parsed) +
geom_vline(xintercept = 0.95, linetype = 2) +
labs(y = "Variance estimator", x = "Coverage", colour = "Clusters sampled") +
theme_bw() + theme(legend.position = "bottom", strip.text.y = element_text(angle = 0)) +
scale_colour_manual(values = cbPalette) +
xlim(coverage_lims)
dev.off()
coverage_summary2 %>%
filter(cluster_size == 10) %>%
ggplot(aes(coverage, method, xmin = coverage_lower, xmax = coverage_upper,
colour = n_clusters_in_sample)) +
geom_point(position = position_dodge(width = 0.5)) +
geom_errorbar(width = 0.00, position = position_dodge(width = 0.5)) +
facet_grid(cols = vars(theta), rows = vars(covariate), labeller = label_parsed) +
geom_vline(xintercept = 0.95, linetype = 2) +
labs(y = "Variance estimator", x = "Coverage", colour = "Clusters sampled") +
theme_bw() + theme(legend.position = "bottom", strip.text.y = element_text(angle = 0)) +
scale_colour_manual(values = cbPalette) +
xlim(coverage_lims)
coverage_summary2 %>%
filter(cluster_size == 30) %>%
ggplot(aes(coverage, method, xmin = coverage_lower, xmax = coverage_upper,
colour = n_clusters_in_sample)) +
geom_point(position = position_dodge(width = 0.5)) +
geom_errorbar(width = 0.00, position = position_dodge(width = 0.5)) +
facet_grid(cols = vars(theta), rows = vars(covariate), labeller = label_parsed) +
geom_vline(xintercept = 0.95, linetype = 2) +
labs(y = "Variance estimator", x = "Coverage", colour = "Clusters sampled") +
theme_bw() + theme(legend.position = "bottom", strip.text.y = element_text(angle = 0)) +
scale_colour_manual(values = cbPalette) +
xlim(coverage_lims)
