kpp <- K_prime_prime(parms = c(my_beta, my_b),
X = my_X,
t = t,
dij = stat,
theta = my_theta,
cluster = "M",
data = ds)
kbb <- bb(parms = c(my_beta, my_b),
X = my_X,
t = t,
dij = stat,
theta = my_theta,
cluster = "M",
data = ds,
return_matrix = TRUE)
-0.5 * log(det(kpp))
-0.5 * log(det(kbb))
fitph <- survival::coxph(survival::Surv(t, stat) ~ X1 + X2 + X3, data = ds)
start_parms <- coef(fitph)
start_parms
start_parms <- c(coef(fitph), rep(0, length(b)))
start_parms <- c(coef(fitph), rep(0, length(my_b)))
diag(length(my_b))
test_theta <- 0.8
fitph <- survival::coxph(survival::Surv(t, stat) ~ X1 + X2 + X3, data = ds)
start_parms <- c(coef(fitph), rep(0, length(my_b)))
fit_optim <- optim(par = start_parms,
fn = lp,
gr = lp_grd,
X = my_X,
t = t ,
cluster = cluster,
dij = stat,
D = test_theta * diag(length(my_b)),
theta = test_theta,
data = ds,
method = "BFGS",
control = list(fnscale = -1))
fit_optim <- optim(par = start_parms,
fn = lp,
gr = lp_grd,
X = my_X,
t = t ,
cluster = "M",
dij = stat,
D = test_theta * diag(length(my_b)),
theta = test_theta,
data = ds,
method = "BFGS",
control = list(fnscale = -1))
test_theta <- 0.8
fitph <- survival::coxph(survival::Surv(t, stat) ~ X1 + X2 + X3, data = ds)
start_parms <- c(coef(fitph), rep(0, length(my_b)))
fit_optim <- optim(par = start_parms,
fn = lp,
gr = lp_grd,
X = my_X,
t = t ,
cluster = "M",
dij = stat,
D = test_theta * diag(length(my_b)),
theta = test_theta,
data = ds,
method = "BFGS",
control = list(fnscale = -1))
fit_optim <- optim(par = start_parms,
fn = lp,
gr = lp_grd,
X = my_X,
t = t ,
cluster = M,
dij = stat,
D = test_theta * diag(length(my_b)),
theta = test_theta,
data = ds,
method = "BFGS",
control = list(fnscale = -1))
fit_optim <- optim(par = start_parms,
fn = lp,
gr = lp_grd,
X = my_X,
t = t ,
cluster = "M",
dij = stat,
D = test_theta * diag(length(my_b)),
theta = test_theta,
data = ds,
method = "BFGS",
control = list(fnscale = -1))
lp(parms = start_parms, X = my_X, dij = stat, theta = test_theta, cluster = "M", data = ds)
debugonce(lp)
lp(parms = start_parms, X = my_X, dij = stat, theta = test_theta, cluster = "M", data = ds)
fit_optim <- optim(par = start_parms,
fn = lp,
gr = lp_grd,
X = my_X,
t = "t" ,
cluster = "M",
dij = stat,
D = test_theta * diag(length(my_b)),
theta = test_theta,
data = ds,
method = "BFGS",
control = list(fnscale = -1))
lp(parms = start_parms, X = my_X, dij = stat, theta = test_theta, cluster = "M", data = ds)
lp(parms = start_parms, X = my_X, t = "t", dij = stat, theta = test_theta, cluster = "M", data = ds)
fit_optim <- optim(par = start_parms,
fn = lp,
gr = lp_grd,
X = my_X,
t = "t" ,
cluster = "M",
dij = stat,
D = test_theta * diag(length(my_b)),
theta = test_theta,
data = ds,
method = "BFGS",
control = list(fnscale = -1))
fit_optim
my_D <-  test_theta * diag(length(my_b))
-0.5 * ( log(det(my_D)) )
kpp <- K_prime_prime(parms = fit_optim$par,
X = my_X,
t = t,
dij = stat,
theta = test_theta,
cluster = "M",
data = ds)
kpp
kbb <- bb(parms = fit_optim$par,
X = my_X,
t = t,
dij = stat,
theta = test_theta,
cluster = "M",
data = ds,
return_matrix = TRUE)
kbb
b <- fit_optim$par[-seq_len(length(my_X))]
b
fit_optim$par
start_parms
fit_optim <- optim(par = start_parms,
fn = lp,
gr = lp_grd,
X = my_X,
t = "t" ,
cluster = "M",
dij = stat,
D = my_D,
theta = test_theta,
data = ds,
method = "BFGS",
control = list(fnscale = -1))
fit_optim
test_theta
fit_optim <- optim(par = start_parms,
fn = lp,
gr = lp_grd,
X = my_X,
t = "t" ,
cluster = "M",
dij = stat,
D = my_D,
theta = test_theta,
data = ds,
method = "BFGS",
control = list(fnscale = -1))
fit_optim
lp(start_parms, my_X, "t", stat, test_theta, "M", ds)
start_parms <- c(coef(fitph), rep(0.1, length(my_b)))
lp(start_parms, my_X, "t", stat, test_theta, "M", ds)
fit_optim <- optim(par = start_parms,
fn = lp,
gr = lp_grd,
X = my_X,
t = "t" ,
cluster = "M",
dij = stat,
D = my_D,
theta = test_theta,
data = ds,
method = "BFGS",
control = list(fnscale = -1))
fit_optim
fit_optim <- optim(par = start_parms,
fn = lp,
gr = lp_grd,
X = my_X,
t = "t" ,
cluster = "M",
dij = stat,
D = my_D,
theta = test_theta,
data = ds,
method = "BFGS",
control = list(fnscale = 1))
fit_optim
lp_grd(start_parms, my_X, "t", stat, test_theta, "M", ds)
lp_grd(start_parms, my_X, "t", stat, test_theta, "M", ds)
debugonce(lp_grd)
lp_grd(start_parms, my_X, "t", stat, test_theta, "M", ds)
debugonce(lp_grd)
lp_grd(start_parms, my_X, "t", stat, test_theta, "M", ds)
theta
lp_grd(parms = start_parms, X = my_X, t = "t", dij = stat, theta = test_theta, cluster = "M", data = ds)
debugonce(lp_grd)
lp_grd(parms = start_parms, X = my_X, t = "t", dij = stat, theta = test_theta, cluster = "M", data = ds)
l5
debugonce(dlp_b)
lp_grd(parms = start_parms, X = my_X, t = "t", dij = stat, theta = test_theta, cluster = "M", data = ds)
ll_unpenalized
penalty
D
solve(D)
seq_len(nk)
seq_len(nk)
names(start_parms) <- c(my_X, paste0("Z", seq_len(my_nk)))
names(start_parms)
lp_grd(parms = start_parms, X = my_X, t = "t", dij = stat, theta = test_theta, cluster = "M", data = ds)
start_parms
start_parms <- c(coef(fitph), rep(0, length(my_b)))
names(start_parms) <- c(my_X, paste0("Z", seq_len(my_nk)))
fit_optim <- optim(par = start_parms,
fn = lp,
gr = lp_grd,
X = my_X,
t = "t" ,
cluster = "M",
dij = stat,
D = my_D,
theta = test_theta,
data = ds,
method = "BFGS",
control = list(fnscale = -1))
fit_optim
kpp <- K_prime_prime(parms = fit_optim$par,
X = my_X,
t = t,
dij = stat,
theta = test_theta,
cluster = "M",
data = ds)
kbb <- bb(parms = fit_optim$par,
X = my_X,
t = t,
dij = stat,
theta = test_theta,
cluster = "M",
data = ds,
return_matrix = TRUE)
kbb
b <- fit_optim$par[-seq_len(length(my_X))]
b
inner(b)
inner(b) * test_theta
b %*% my_D %*% b
inner(b) * test_theta == b %*% my_D %*% b
inner(b) * test_theta
-0.5 * ( log(det(my_D)) + log(det(kpp)) +  inner(b) * test_theta)
-0.5 * ( log(det(my_D)) + log(det(kbb)) +  inner(b) * test_theta)
-0.5 * ( log(det(my_D)) + log(det(kpp)) +  inner(b) * test_theta)
-0.5 * ( log(det(my_D)) + log(det(kbb)) +  inner(b) * test_theta)
devtools::load_all(".")
devtools::load_all(".")
optim_ipl(theta = test_theta, start_parms = start_parms,
X = my_X, t = t, cluster = "M", dij = stat, data = ds)
debugonce(optim_ipl)
optim_ipl(theta = test_theta, start_parms = start_parms,
X = my_X, t = t, cluster = "M", dij = stat, data = ds)
debugonce(optim_ipl)
optim_ipl(theta = test_theta, start_parms = start_parms,
X = my_X, t = t, cluster = "M", dij = stat, data = ds)
start_parms
X
t
debugonce(optim_ipl)
optim_ipl(theta = test_theta, start_parms = start_parms,
X = my_X, t = "t", cluster = "M", dij = stat, data = ds)
fit_optim
start_parms
-0.5 * ( log(det(my_D)) + log(det(kpp)) +  inner(b) * test_theta)
optim(c(0.8), fn = optim_ipl, gr = NULL, method = "BGFS", control = list(fnscale = -1),
start_parms = start_parms, X = my_X, t = "t", cluster = "M", dij = stat, data = ds)
optim(c(0.8), fn = optim_ipl, gr = NULL, method = "BFGS", control = list(fnscale = -1),
start_parms = start_parms, X = my_X, t = "t", cluster = "M", dij = stat, data = ds)
optim(c(0.8), fn = optim_ipl, gr = NULL, method = "BFG", control = list(fnscale = -1),
start_parms = start_parms, X = my_X, t = "t", cluster = "M", dij = stat, data = ds, lower = 0, upper = 100)
optim(c(0.8), fn = optim_ipl, gr = NULL, method = "L-BFGS-B", control = list(fnscale = -1),
start_parms = start_parms, X = my_X, t = "t", cluster = "M", dij = stat, data = ds, lower = 0, upper = 100)
coxfit <- coxme::coxme(survival::Surv(t, stat) ~ X1 + X2 + X3 + (1|M), data = ds)
coxme::VarCorr(coxfit)
coxme::VarCorr(coxfit)$M
optim(c(0.8), fn = optim_ipl, gr = NULL, method = "L-BFGS-B", control = list(fnscale = -1),
start_parms = start_parms, X = my_X, t = "t", cluster = "M", dij = stat, data = ds,
lower = 0.01, upper = 100)
optim(c(0.8), fn = optim_ipl, gr = NULL, method = "L-BFGS-B", control = list(fnscale = 1),
start_parms = start_parms, X = my_X, t = "t", cluster = "M", dij = stat, data = ds,
lower = 0.01, upper = 100)
my_beta = c(1, -0.7, 0.5)
my_theta = 1
my_k = 10
my_nk = 10
my_X = c("X1", "X2", "X3")
ds <- one_dataset(list(k = my_k, nk = my_nk, beta = my_beta, theta = my_theta))
devtools::load_all(".")
my_beta = c(1, -0.7, 0.5)
my_theta = 1
my_k = 10
my_nk = 10
my_X = c("X1", "X2", "X3")
ds <- one_dataset(list(k = my_k, nk = my_nk, beta = my_beta, theta = my_theta))
fitph <- survival::coxph(survival::Surv(t, stat) ~ X1 + X2 + X3, data = ds)
start_parms <- c(coef(fitph), rep(0, length(my_b)))
names(start_parms) <- c(my_X, paste0("Z", seq_len(my_nk)))
fitph <- survival::coxph(survival::Surv(t, stat) ~ X1 + X2 + X3, data = ds)
start_parms <- c(coef(fitph), rep(0, length(my_b)))
names(start_parms) <- c(my_X, paste0("Z", seq_len(my_nk)))
start_parms <- c(coef(fitph), rep(0, my_nk))
start_parms
test_theta <- 0.8
names(start_parms) <- c(my_X, paste0("Z", seq_len(my_nk)))
fit_optim <- optim(par = start_parms,
fn = lp,
gr = lp_grd,
X = my_X,
t = "t" ,
cluster = "M",
dij = stat,
D = my_D,
theta = test_theta,
data = ds,
method = "BFGS",
control = list(fnscale = -1))
fit_optim
kpp <- K_prime_prime(parms = fit_optim$par,
X = my_X,
t = t,
dij = stat,
theta = test_theta,
cluster = "M",
data = ds)
kpp
fit_optim$par[-seq_along(my_X)]
pl_theta(theta = 0.8, b = fit_optim$par[-seq_along(my_X)], K_ppl = kpp)
pl_theta(theta = 0.8, b = fit_optim$par[-seq_along(my_X)], K_ppl = K_prime_prime(parms = fit_optim$par,
X = my_X,
t = t,
dij = stat,
theta = 0.8,
cluster = "M",
data = ds))
seq(0.001, 5, by = 0.1)
lps <- sapply(seq(0.001, 5, by = 0.1), function(test_theta){
pl_theta(theta = test_theta, b = fit_optim$par[-seq_along(my_X)],
K_ppl = K_prime_prime(parms = fit_optim$par,
X = my_X,
t = t,
dij = stat,
theta = 0.8,
cluster = "M",
data = ds))
})
plot(seq(0.001, 5, by = 0.1), lps, type = "l")
lps <- sapply(seq(0.001, 5, by = 0.1), function(test_theta){
pl_theta(theta = test_theta, b = fit_optim$par[-seq_along(my_X)],
K_ppl = K_prime_prime(parms = fit_optim$par,
X = my_X,
t = t,
dij = stat,
theta = test_theta,
cluster = "M",
data = ds))
})
plot(seq(0.001, 5, by = 0.1), lps, type = "l")
plot(seq(-1, 5, by = 0.1), lps, type = "l")
lps <- sapply(seq(-1, 5, by = 0.1), function(test_theta){
pl_theta(theta = test_theta, b = fit_optim$par[-seq_along(my_X)],
K_ppl = K_prime_prime(parms = fit_optim$par,
X = my_X,
t = t,
dij = stat,
theta = test_theta,
cluster = "M",
data = ds))
})
lps <- sapply(seq(0.00001, 0.002, by = 0.0001), function(test_theta){
pl_theta(theta = test_theta, b = fit_optim$par[-seq_along(my_X)],
K_ppl = K_prime_prime(parms = fit_optim$par,
X = my_X,
t = t,
dij = stat,
theta = test_theta,
cluster = "M",
data = ds))
})
seq(0.00001, 0.002, by = 0.0001)
plot(seq(0.00001, 0.002, by = 0.0001), lps, type = "l")
vignette("laplace", "coxme")
coxfit <- coxme::coxme(survival::Surv(t, stat) ~ X1 + X2 + X3 + (1|M), data = ds)
devtools::load_all(".")
my_beta = c(1, -0.7, 0.5)
my_theta = 1
my_k = 10
my_nk = 10
my_X = c("X1", "X2", "X3")
ds <- one_dataset(list(k = my_k, nk = my_nk, beta = my_beta, theta = my_theta))
coxfit <- coxme::coxme(survival::Surv(t, stat) ~ X1 + X2 + X3 + (1|M), data = ds)
coxme::VarCorr(coxfit)$M
coxfit$loglik
logLik(coxfit)
coxfit$loglik
logLik.coxme(coxfit)
logLik(coxfit)
library(coxme)
logLik(coxfit)
LogLik(coxfit)
coxfit$loglik
VarCorr(coxfit)
pl_theta(theta = VarCorr(coxfit)$M, b = ranef(coxfit)$M,
K_ppl = K_prime_prime(parms = c(fixef(coxfit), ranef(coxfit)),
X = my_X,
t = t,
dij = stat,
theta = test_theta,
cluster = "M",
data = ds))
pl_theta(theta = VarCorr(coxfit)$M, b = ranef(coxfit)$M,
K_ppl = K_prime_prime(parms = c(fixef(coxfit), ranef(coxfit)),
X = my_X,
t = t,
dij = stat,
theta = VarCorr(coxfit)$M,
cluster = "M",
data = ds))
VarCorr(coxfit)$M
pl_theta(theta = VarCorr(coxfit)$M, b = ranef(coxfit)$M,
K_ppl = K_prime_prime(parms = c(fixef(coxfit), ranef(coxfit)$M),
X = my_X,
t = t,
dij = stat,
theta = VarCorr(coxfit)$M,
cluster = "M",
data = ds))
pl_theta(theta = VarCorr(coxfit)$M, b = ranef(coxfit)$M,
K_ppl = K_prime_prime(parms = c(fixef(coxfit), ranef(coxfit)$M),
X = my_X,
t = t,
dij = stat,
theta = VarCorr(coxfit)$M,
cluster = "M",
data = ds))
lp(parms = parms = c(fixef(coxfit), ranef(coxfit)$M),
X = my_X,
t = t,
dij = stat,
theta = VarCorr(coxfit)$M,
cluster = "M",
data = ds)
lp(parms = parms = c(fixef(coxfit), ranef(coxfit)$M),
X = my_X,
t = t,
dij = stat,
theta = VarCorr(coxfit)$M,
cluster = "M",
data = ds)
pl_theta(theta = VarCorr(coxfit)$M, b = ranef(coxfit)$M,
K_ppl = K_prime_prime(parms = c(fixef(coxfit), ranef(coxfit)$M),
X = my_X,
t = t,
dij = stat,
theta = VarCorr(coxfit)$M,
cluster = "M",
data = ds))
lp(parms = parms = c(fixef(coxfit), ranef(coxfit)$M),
X = my_X,
t = t,
dij = stat,
theta = VarCorr(coxfit)$M,
cluster = "M",
data = ds)
lp(parms = c(fixef(coxfit), ranef(coxfit)$M),
X = my_X,
t = t,
dij = stat,
theta = VarCorr(coxfit)$M,
cluster = "M",
data = ds)
coxfit$loglik
pl_theta(theta = VarCorr(coxfit)$M, b = ranef(coxfit)$M,
K_ppl = K_prime_prime(parms = c(fixef(coxfit), ranef(coxfit)$M),
X = my_X,
t = t,
dij = stat,
theta = VarCorr(coxfit)$M,
cluster = "M",
data = ds))
lp(parms = c(fixef(coxfit), ranef(coxfit)$M),
X = my_X,
t = t,
dij = stat,
theta = VarCorr(coxfit)$M,
cluster = "M",
data = ds) -10.39223
inner(ranef(coxfit)$M) * VarCorr(coxfit)$M
lp(parms = c(fixef(coxfit), ranef(coxfit)$M),
X = my_X,
t = t,
dij = stat,
theta = VarCorr(coxfit)$M,
cluster = "M",
data = ds) -10.39223 + inner(ranef(coxfit)$M) * VarCorr(coxfit)$M
