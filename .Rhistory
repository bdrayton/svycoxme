nreps <- 1 # replicates for each parameter combo
par_combos_df <- expand.grid(k = 50, nk = c(4, 10), theta = c(0.5, 1, 2))
par_combos_list <- split(control_df, seq_len(nrow(control_df)))
par_combos_df <- expand.grid(k = 50, nk = c(4, 10), theta = c(0.5, 1, 2))
par_combos_df <- expand.grid(k = 50, nk = c(4, 10), theta = c(0.5, 1, 2))
par_combos_list <- split(par_combos_df, seq_len(nrow(control_df)))
par_combos_list <- split(par_combos_df, seq_len(nrow(par_combos_df)))
par_combos_list <- lapply(control_list, function(one_par){
one_list <- as.list(one_par)
append(one_list, list(beta = c(1, -0.5, 0.7),
X = c("X1", "X2", "X3")))
})
par_combos_list <- lapply(par_combos_list, function(one_par){
one_list <- as.list(one_par)
append(one_list, list(beta = c(1, -0.5, 0.7),
X = c("X1", "X2", "X3")))
})
par_combos_list
par_combos_list_replicated <- rep(par_combos_list, nreps)
par_combos_list_replicated[[1]]
one_rep <- function(control){
my_k <- control$k
my_nk <- control$nk
my_beta <- control$beta
my_theta <- control$theta
my_X <- control$X
ds <- one_dataset(list(k = my_k, nk = my_nk, beta = my_beta, theta = my_theta))
fit0 <- survival::coxph(survival::Surv(stat_time, stat) ~ X1 + X2 + X3, data = ds)
my_start_parameters <- c(coef(fit0), rep(0, my_k))
names(my_start_parameters) <- c(my_X, paste0("Z", seq_len(my_k)))
test_loop <- estimate_parameters_loop(start_theta = 0.5,
start_parms = my_start_parameters,
X = my_X,
stat_time = stat_time,
cluster = "M",
dij = stat,
data = ds, max_iter = max_iterations)
ests <- tail(test_loop$estimate_history, 1)[[1]]
####
kbb <- bb(parms = ests$new_beta_b,
X = my_X,
stat_time = stat_time,
dij = stat,
theta = ests$new_theta,
cluster = "M",
data = ds,
return_matrix = TRUE)
kBB <- BB(parms = ests$new_beta_b,
X = my_X,
stat_time = stat_time,
dij = stat,
cluster = "M",
data = ds,
return_matrix = TRUE)
fixed_effects_var <- diag(solve(-kBB))
q <- nrow(kbb)
kbb_inv <- solve(kbb)
the <- ests$new_theta
theta_var <- 2 * the^2 * (q + (1/the^2) * sum(diag(kbb_inv %*% kbb_inv)) - (2/the) * sum(diag(kbb_inv)))^-1
####
list(
fixed_effects = ests$new_beta_b[seq_along(my_X)],
random_effects = ests$new_beta_b[-seq_along(my_X)],
theta = ests$new_theta,
fixed_effects_var = fixed_effects_var,
theta_var = theta_var
)
}
one_rep(par_combos_list_replicated[[1]])
devtools::load_all(".")
results_replicate_ripatti_table <- readRDS("C:/Users/bdra011/OneDrive - The University of Auckland/PhD/outputs/simulations/data/results_replicate_ripatti_table.rds")
View(results_replicate_ripatti_table)
sqrt(0.00959)
2*sqrt(0.00959)
my_beta = c(1, -0.7, 0.5)
my_theta = 1
my_k = 10
my_nk = 10
my_X = c("X1", "X2", "X3")
ds <- one_dataset(list(k = my_k, nk = my_nk, beta = my_beta, theta = my_theta))
devtools::load_all(".")
ds <- one_dataset(list(k = my_k, nk = my_nk, beta = my_beta, theta = my_theta))
ds
head(ds)
ds2 <- dplyr::mutate(ds, M2 = rep(c("l", "r"), ceiling(nrow(.)/2)[seq_len(my_k * my_nk)])
ds2 <- dplyr::mutate(ds, M2 = rep(c("l", "r"), ceiling(nrow(.)/2))[seq_len(my_k * my_nk)])
ds2 <- dplyr::mutate(ds, M2 = rep(c("l", "r"), ceiling(nrow(ds)/2))[seq_len(my_k * my_nk)])
ds2
11*11
my_k = 11
my_nk = 11
my_X = c("X1", "X2", "X3")
ds <- one_dataset(list(k = my_k, nk = my_nk, beta = my_beta, theta = my_theta))
ds2 <- dplyr::mutate(ds, M2 = rep(c("l", "r"), ceiling(nrow(ds)/2))[seq_len(my_k * my_nk)])
ds <- one_dataset(list(k = my_k, nk = my_nk, beta = my_beta, theta = my_theta)) %>%
dplyr::mutate(M2 = rep(c("l", "r"), ceiling(nrow(.)/2))[seq_len(my_k * my_nk)])
fit <- coxme::coxme(survival::Surv(stat_time, stat) ~ X1 + X2 + X3 + (1|M + M2), data = ds)
sapply(ds, class)
fit <- coxme::coxme(survival::Surv(stat_time, stat) ~ X1 + X2 + X3 + (1|M) + (1|M2), data = ds)
coxme::VarCorr(fit)
str(fit)
coxme::VarCorr(fit)
one_dataset
list(X1 = rnorm(n, 0, 1),
X2 = rep(rnorm(control$k, 0, 1), each = control$nk),
X3 = rep(rep(c(1, 0), ceiling(control$k/2))[seq_len(control$k)], each = control$nk)
)
one_dataset <- function(X_distributions){
X_vars <- lapply(X_distributions, eval)
}
one_dataset(X_distributions = list(X1 = rnorm(n, 0, 1),
X2 = rep(rnorm(control$k, 0, 1), each = control$nk),
X3 = rep(rep(c(1, 0), ceiling(control$k/2))[seq_len(control$k)], each = control$nk)))
X1 = expr(rnorm(n, 0, 1))
X1 = expression(rnorm(n, 0, 1))
eval(X1)
n = 10
eval(X1)
one_dataset <- function(X_distributions){
X_vars <- lapply(X_distributions, eval)
X_vars
}
one_dataset(X_distributions = list(X1 = expression(rnorm(n, 0, 1)),
X2 = expression(rep(rnorm(control$k, 0, 1), each = control$nk)),
X3 = expression(rep(rep(c(1, 0), ceiling(control$k/2))[seq_len(control$k)], each = control$nk))))
one_dataset <- function(X_distributions, control = list(k = 10, nk = 10, n = 100)){
X_vars <- lapply(X_distributions, eval)
X_vars
}
one_dataset(X_distributions = list(X1 = expression(rnorm(n, 0, 1)),
X2 = expression(rep(rnorm(control$k, 0, 1), each = control$nk)),
X3 = expression(rep(rep(c(1, 0), ceiling(control$k/2))[seq_len(control$k)], each = control$nk))))
one_dataset <- function(X_distributions, control = list(k = 10, nk = 10, n = 100)){
X_vars <- lapply(X_distributions, eval)
X_vars
}
one_dataset(X_distributions = list(X1 = expression(rnorm(n, 0, 1)),
X2 = expression(rep(rnorm(control$k, 0, 1), each = control$nk)),
X3 = expression(rep(rep(c(1, 0), ceiling(control$k/2))[seq_len(control$k)], each = control$nk))))
debugonce(one_dataset)
one_dataset(X_distributions = list(X1 = expression(rnorm(n, 0, 1)),
X2 = expression(rep(rnorm(control$k, 0, 1), each = control$nk)),
X3 = expression(rep(rep(c(1, 0), ceiling(control$k/2))[seq_len(control$k)], each = control$nk))))
control
X_distributions
X_distributions[[1]]
eval(X_distributions[[1]])
eval(X_distributions[[2]])
eval(X_distributions[[3]])
one_dataset(X_distributions = list(X1 = expression(rnorm(n, 0, 1)),
X2 = expression(rep(rnorm(control$k, 0, 1), each = control$nk)),
X3 = expression(rep(rep(c(1, 0), ceiling(control$k/2))[seq_len(control$k)], each = control$nk))),
control = list(k = 10, nk = 10, n = 100))
str(X1)
parent.frame()
one_dataset <- function(X_distributions, control = list(k = 10, nk = 10, n = 100)){
X_vars <- lapply(X_distributions, eval, enclos = parent.frame())
X_vars
}
one_dataset(X_distributions = list(X1 = expression(rnorm(n, 0, 1)),
X2 = expression(rep(rnorm(control$k, 0, 1), each = control$nk)),
X3 = expression(rep(rep(c(1, 0), ceiling(control$k/2))[seq_len(control$k)], each = control$nk))),
control = list(k = 10, nk = 10, n = 100))
one_dataset <- function(X_distributions, control = list(k = 10, nk = 10, n = 100)){
X_vars <- lapply(X_distributions, eval, enclos = parent.frame(n=2))
X_vars
}
one_dataset(X_distributions = list(X1 = expression(rnorm(n, 0, 1)),
X2 = expression(rep(rnorm(control$k, 0, 1), each = control$nk)),
X3 = expression(rep(rep(c(1, 0), ceiling(control$k/2))[seq_len(control$k)], each = control$nk))),
control = list(k = 10, nk = 10, n = 100))
eval_one <- function(one_expression){
eval(one_expression)
}
debugonce(eval_one)
one_dataset <- function(X_distributions, control = list(k = 10, nk = 10, n = 100)){
X_vars <- lapply(X_distributions, eval_one)
X_vars
}
one_dataset(X_distributions = list(X1 = expression(rnorm(n, 0, 1)),
X2 = expression(rep(rnorm(control$k, 0, 1), each = control$nk)),
X3 = expression(rep(rep(c(1, 0), ceiling(control$k/2))[seq_len(control$k)], each = control$nk))),
control = list(k = 10, nk = 10, n = 100))
parent.frame()
parent.frame(n=2)
parent.frame(n=3)
ls()
ls(name = parent.frame())
ls(name = parent.frame(n=2))
one_dataset <- function(X_distributions, control = list(k = 10, nk = 10, n = 100)){
X_vars <- lapply(X_distributions, eval_one, control = control)
X_vars
}
eval_one <- function(one_expression, ...){
eval(one_expression)
}
debugonce(eval_one)
one_dataset(X_distributions = list(X1 = expression(rnorm(n, 0, 1)),
X2 = expression(rep(rnorm(control$k, 0, 1), each = control$nk)),
X3 = expression(rep(rep(c(1, 0), ceiling(control$k/2))[seq_len(control$k)], each = control$nk))),
control = list(k = 10, nk = 10, n = 100))
one_dataset <- function(X_distributions, control = list(k = 10, nk = 10, n = 100)){
X_vars <- lapply(X_distributions, eval_one, control = control)
X_vars
}
eval_one <- function(one_expression, control){
eval(one_expression)
}
debugonce(eval_one)
one_dataset(X_distributions = list(X1 = expression(rnorm(n, 0, 1)),
X2 = expression(rep(rnorm(control$k, 0, 1), each = control$nk)),
X3 = expression(rep(rep(c(1, 0), ceiling(control$k/2))[seq_len(control$k)], each = control$nk))),
control = list(k = 10, nk = 10, n = 100))
one_dataset <- function(X_distributions, control = list(k = 10, nk = 10, n = 100)){
X_vars <- plyr::ldply(X_distributions, eval_one, control = control)
X_vars
}
eval_one <- function(one_expression, control){
eval(one_expression)
}
one_dataset(X_distributions = list(X1 = expression(rnorm(n, 0, 1)),
X2 = expression(rep(rnorm(control$k, 0, 1), each = control$nk)),
X3 = expression(rep(rep(c(1, 0), ceiling(control$k/2))[seq_len(control$k)], each = control$nk))),
control = list(k = 10, nk = 10, n = 100))
rm(n)
one_dataset <- function(X_distributions, control = list(k = 10, nk = 10, n = 100)){
X_vars <- plyr::ldply(X_distributions, eval_one, control = control)
X_vars
}
eval_one <- function(one_expression, control){
eval(one_expression)
}
one_dataset(X_distributions = list(X1 = expression(rnorm(n, 0, 1)),
X2 = expression(rep(rnorm(control$k, 0, 1), each = control$nk)),
X3 = expression(rep(rep(c(1, 0), ceiling(control$k/2))[seq_len(control$k)], each = control$nk))),
control = list(k = 10, nk = 10, n = 100))
one_dataset(X_distributions = list(X1 = expression(rnorm(control$n, 0, 1)),
X2 = expression(rep(rnorm(control$k, 0, 1), each = control$nk)),
X3 = expression(rep(rep(c(1, 0), ceiling(control$k/2))[seq_len(control$k)], each = control$nk))),
control = list(k = 10, nk = 10, n = 100))
cbind(x = vector(mode = "logical", length = 2),
y = vector(mode = "charactor", length = 2),
z = vector(mode = "double", length = 2))
cbind(x = vector(mode = "logical", length = 2),
y = vector(mode = "character", length = 2),
z = vector(mode = "double", length = 2))
ds <- one_dataset(X_distributions = list(X1 = expression(rnorm(control$n, 0, 1)),
X2 = expression(rep(rnorm(control$k, 0, 1), each = control$nk)),
X3 = expression(rep(rep(c(1, 0), ceiling(control$k/2))[seq_len(control$k)], each = control$nk))),
control = list(k = 10, nk = 10, n = 100))
data.frame(ds)
ds <- one_dataset(X_distributions = list(X1 = expression(rnorm(control$n, 0, 1)),
X2 = expression(rep(rnorm(control$k, 0, 1), each = control$nk)),
X3 = expression(rep(rep(c(1, 0), ceiling(control$k/2))[seq_len(control$k)], each = control$nk))),
control = list(k = 10, nk = 10, n = 100))
data.frame(ds)
one_dataset <- function(X_distributions, control = list(k = 10, nk = 10, n = 100)){
X_vars <- lapply(X_distributions, eval_one, control = control)
X_vars
}
ds <- one_dataset(X_distributions = list(X1 = expression(rnorm(control$n, 0, 1)),
X2 = expression(rep(rnorm(control$k, 0, 1), each = control$nk)),
X3 = expression(rep(rep(c(1, 0), ceiling(control$k/2))[seq_len(control$k)], each = control$nk))),
control = list(k = 10, nk = 10, n = 100))
data.frame(ds)
data.frame
one_dataset <- function(X_distributions, control = list(k = 10, nk = 10, n = 100)){
X_vars <- lapply(X_distributions, eval_one, control = control)
data.frame(X_vars)
}
eval_one <- function(one_expression, control){
eval(one_expression)
}
ds <- one_dataset(X_distributions = list(X1 = expression(rnorm(control$n, 0, 1)),
X2 = expression(rep(rnorm(control$k, 0, 1), each = control$nk)),
X3 = expression(rep(rep(c(1, 0), ceiling(control$k/2))[seq_len(control$k)], each = control$nk))),
control = list(k = 10, nk = 10, n = 100))
data.frame(ds)
ds
one_dataset(X_distributions = list(X1 = rnorm(control$n, 0, 1)),
control = list(k = 10, nk = 10, n = 100))
test_fun <- function(a, b = list(a)){
return(b)
}
test_fun(a = 1)
test_fun <- function(a, b = list(rnorm(a, 0, 1))){
return(b)
}
test_fun(a = 1)
one_dataset <- function(control = list(k = 10, nk = 10, n = 100), X_distributions){
X_vars <- lapply(X_distributions, eval_one, control = control)
data.frame(X_vars)
}
eval_one <- function(one_expression, control){
eval(one_expression)
}
ds <- one_dataset(X_distributions = list(X1 = expression(rnorm(control$n, 0, 1)),
X2 = expression(rep(rnorm(control$k, 0, 1), each = control$nk)),
X3 = expression(rep(rep(c(1, 0), ceiling(control$k/2))[seq_len(control$k)], each = control$nk))),
control = list(k = 10, nk = 10, n = 100))
one_dataset(X_distributions = list(X1 = rnorm(control$n, 0, 1)),
control = list(k = 10, nk = 10, n = 100))
test_fun <- function(a, b = list(rnorm(a$k, 0, 1))){
return(b)
}
test_fun(a = list(k = 1))
test_fun <- function(a, b = list(x1 = rnorm(a$k, 0, 1))){
return(b)
}
test_fun(a = list(k = 1))
one_dataset <- function(control, X_distributions){
X_vars <- lapply(X_distributions, eval_one, control = control)
data.frame(X_vars)
}
one_dataset(X_distributions = list(X1 = expression(rnorm(control$n, 0, 1))),
control = list(k = 10, nk = 10, n = 100))
one_dataset <- function(control, X_distributions){
X_vars <- lapply(X_distributions, eval_one, control = control)
data.frame(X_vars)
}
one_dataset(X_distributions = list(X1 = expression(rnorm(control$n, 0, 1))),
control = list(k = 10, nk = 10, n = 100))
one_dataset(X_distributions = list(X1 = expression(rnorm(control$n, 0, 1)),
X2 = expression(rep(rnorm(control$k, 0, 1), each = control$nk)),
X3 = expression(rep(rep(c(1, 0), ceiling(control$k/2))[seq_len(control$k)], each = control$nk))),
control = list(k = 10, nk = 10, n = 100))
one_dataset(X_distributions = list(X1 = rnorm(control$n, 0, 1),
X2 = expression(rep(rnorm(control$k, 0, 1), each = control$nk)),
X3 = expression(rep(rep(c(1, 0), ceiling(control$k/2))[seq_len(control$k)], each = control$nk))),
control = list(k = 10, nk = 10, n = 100))
one_dataset(X_distributions = list(X1 = rnorm(control$n, 0, 1),
X2 = rep(rnorm(control$k, 0, 1), each = control$nk),
X3 = rep(rep(c(1, 0), ceiling(control$k/2))[seq_len(control$k)], each = control$nk)),
control = list(k = 10, nk = 10, n = 100))
one_dataset(
control = list(k = 10, nk = 10, n = 100),
X_distributions = list(X1 = rnorm(control$n, 0, 1),
X2 = rep(rnorm(control$k, 0, 1), each = control$nk),
X3 = rep(rep(c(1, 0), ceiling(control$k/2))[seq_len(control$k)], each = control$nk)))
one_dataset <- function(control, X_distributions){
X_vars <- X_distributions
data.frame(X_vars)
}
one_dataset(
control = list(k = 10, nk = 10, n = 100),
X_distributions = list(X1 = rnorm(control$n, 0, 1),
X2 = rep(rnorm(control$k, 0, 1), each = control$nk),
X3 = rep(rep(c(1, 0), ceiling(control$k/2))[seq_len(control$k)], each = control$nk)))
one_dataset <- function(control, X_distributions = list(X1 = rnorm(control$n, 0, 1),
X2 = rep(rnorm(control$k, 0, 1), each = control$nk),
X3 = rep(rep(c(1, 0), ceiling(control$k/2))[seq_len(control$k)], each = control$nk))){
X_vars <- X_distributions
data.frame(X_vars)
}
one_dataset(
control = list(k = 10, nk = 10, n = 100),
X_distributions = list(X1 = rnorm(control$n, 0, 1),
X2 = rep(rnorm(control$k, 0, 1), each = control$nk),
X3 = rep(rep(c(1, 0), ceiling(control$k/2))[seq_len(control$k)], each = control$nk)))
test_fun <- function(control, b = list(X1 = rnorm(control$k, 0, 1))){
return(b)
}
test_fun(a = list(k = 1))
test_fun(control = list(k = 1))
test_fun <- function(control, b = list(X1 = rnorm(control$k, 0, 1))){
data.frame(b)
}
test_fun(control = list(k = 1))
test_fun(control = list(n = 100), b = list(X1 = rnorm(control$k, 0, 1)))
test_fun <- function(control, b = list(X1 = rnorm(control$n, 0, 1))){
data.frame(b)
}
test_fun(control = list(n = 100), b = list(X1 = rnorm(control$k, 0, 1)))
one_dataset <- function(control = list(k = 10, nk = 10, n = 100), X_distributions){
X_vars <- lapply(X_distributions, eval_one, control = control)
data.frame(X_vars)
}
eval_one <- function(one_expression, control){
eval(one_expression)
}
ds <- one_dataset(X_distributions = list(X1 = expression(rnorm(control$n, 0, 1)),
X2 = expression(rep(rnorm(control$k, 0, 1), each = control$nk)),
X3 = expression(rep(rep(c(1, 0), ceiling(control$k/2))[seq_len(control$k)], each = control$nk))),
control = list(k = 10, nk = 10, n = 100))
ds
lapply(list(), return)
lapply(list(), return) |> data.frame()
X <- lapply(list(), return) |> data.frame()
data.frame(data.frame(y = 1), X)
X <- lapply(list(), return) |> data.frame()
data.frame(data.frame(y = 1), X)
one_dataset <- function(control, X_distributions){
X_vars <- lapply(X_distributions, eval_one, control = control)
data.frame(X_vars)
}
one_dataset <- function(control, X_dists){
X_vars <- lapply(X_distributions, eval_one, control = control)
data.frame(X_vars)
}
eval_one <- function(one_expression, control){
eval(one_expression)
}
ds <- one_dataset(X_dists = list(X1 = expression(rnorm(control$n, 0, 1)),
X2 = expression(rep(rnorm(control$k, 0, 1), each = control$nk)),
X3 = expression(rep(rep(c(1, 0), ceiling(control$k/2))[seq_len(control$k)], each = control$nk))),
control = list(k = 10, nk = 10, n = 100))
one_dataset <- function(control, X_dists){
X_vars <- lapply(X_dists, eval_one, control = control)
data.frame(X_vars)
}
eval_one <- function(one_expression, control){
eval(one_expression)
}
ds <- one_dataset(X_dists = list(X1 = expression(rnorm(control$n, 0, 1)),
X2 = expression(rep(rnorm(control$k, 0, 1), each = control$nk)),
X3 = expression(rep(rep(c(1, 0), ceiling(control$k/2))[seq_len(control$k)], each = control$nk))),
control = list(k = 10, nk = 10, n = 100))
ds <- one_dataset(X_dists = list(X1 = expression(rnorm(control$n, 0, 1)),
X2 = expression(rep(rnorm(control$k, 0, 1), each = control$nk)),
X3 = expression(rep(rep(c(1, 0), ceiling(control$k/2))[seq_len(control$k)], each = control$nk))),
control = list(k = 10, nk = 10, n = 100))
ds
svycoxme::one_dataset
ds <- one_dataset(X_dists = list(X1 = expression(rnorm(control$n, 0, 1)),
X2 = expression(rep(rnorm(control$k, 0, 1), each = control$nk)),
X3 = expression(rep(rep(c(1, 0), ceiling(control$k/2))[seq_len(control$k)], each = control$nk))),
M_dists = list(M1 = expression(rep(1:control$k, each = control$nk))),
control = list(k = 10, nk = 10, n = 100))
one_dataset <- function(control, X_dists, M_dists){
X_vars <- lapply(X_dists, eval_one, control = control)
data.frame(X_vars)
}
ds <- one_dataset(X_dists = list(X1 = expression(rnorm(control$n, 0, 1)),
X2 = expression(rep(rnorm(control$k, 0, 1), each = control$nk)),
X3 = expression(rep(rep(c(1, 0), ceiling(control$k/2))[seq_len(control$k)], each = control$nk))),
M_dists = list(M1 = expression(rep(1:control$k, each = control$nk))),
control = list(k = 10, nk = 10, n = 100))
ds
ds <- one_dataset(dists = list(X1 = expression(rnorm(control$n, 0, 1)),
X2 = expression(rep(rnorm(control$k, 0, 1), each = control$nk)),
X3 = expression(rep(rep(c(1, 0), ceiling(control$k/2))[seq_len(control$k)], each = control$nk)),
M1 = expression(rep(1:control$k, each = control$nk))),
control = list(k = 10, nk = 10, n = 100))
one_dataset <- function(control, dists){
vars <- lapply(dists, eval_one, control = control)
data.frame(vars)
}
ds <- one_dataset(dists = list(X1 = expression(rnorm(control$n, 0, 1)),
X2 = expression(rep(rnorm(control$k, 0, 1), each = control$nk)),
X3 = expression(rep(rep(c(1, 0), ceiling(control$k/2))[seq_len(control$k)], each = control$nk)),
M1 = expression(rep(1:control$k, each = control$nk))),
control = list(k = 10, nk = 10, n = 100))
ds
ds <- one_dataset(dists = list(X1 = expression(rnorm(control$n, 0, 1)),
X2 = expression(rep(rnorm(control$k, 0, 1), each = control$nk)),
X3 = expression(rep(rep(c(1, 0), ceiling(control$k/2))[seq_len(control$k)], each = control$nk)),
M1 = expression(rep(1:control$k, each = control$nk)),
M2 = expression(rep(c("l", "r"), ceiling(n/2))[seq_len(control$k * control$nk)]),
control = list(k = 10, nk = 10, n = 100)))
ds <- one_dataset(dists = list(X1 = expression(rnorm(control$n, 0, 1)),
X2 = expression(rep(rnorm(control$k, 0, 1), each = control$nk)),
X3 = expression(rep(rep(c(1, 0), ceiling(control$k/2))[seq_len(control$k)], each = control$nk)),
M1 = expression(rep(1:control$k, each = control$nk)),
M2 = expression(rep(c("l", "r"), ceiling(n/2))[seq_len(control$k * control$nk)]),
control = list(k = 10, nk = 10, n = 100)))
ds <- one_dataset(dists = list(X1 = expression(rnorm(control$n, 0, 1)),
X2 = expression(rep(rnorm(control$k, 0, 1), each = control$nk)),
X3 = expression(rep(rep(c(1, 0), ceiling(control$k/2))[seq_len(control$k)], each = control$nk)),
M1 = expression(rep(1:control$k, each = control$nk)),
M2 = expression(rep(c("l", "r"), ceiling(n/2))[seq_len(control$k * control$nk)])),
control = list(k = 10, nk = 10, n = 100))
ds
ds <- one_dataset(dists = list(X1 = expression(rnorm(control$n, 0, 1)),
X2 = expression(rep(rnorm(control$k, 0, 1), each = control$nk)),
X3 = expression(rep(rep(c(1, 0), ceiling(control$k/2))[seq_len(control$k)], each = control$nk)),
M1 = expression(rep(1:control$k, each = control$nk)),
M2 = expression(rep(c("l", "r"), ceiling(control$n/2))[seq_len(control$k * control$nk)])),
control = list(k = 10, nk = 10, n = 100))
ds
lme4::lFormula
formula("Y ~ X1 + X2 + X3 + (1|M)")
test_formula <- formula("Y ~ X1 + X2 + X3 + (1|M)")
subbars(test_formula)
lme4:::subbars(test_formula)
lme4:::RHSForm(test_formula)
lme4:::splitFormula(test_formula)
lme4:::subbars(test_formula)
lme4:::getFixedFormula(test_formula)
lme4:::getRandomFormula(test_formula)
lme4:::getResponseFormula(test_formula)
lme4:::getCovariateFormula(test_formula)
lme4::lFormula
fr.form <- lme4:::subbars(testformula)
fr.form <- lme4:::subbars(test_formula)
fr.form
environment(fr.form) <- environment(test_formula)
mf$formula <- fr.form
mkReTrms
lme4:::findbars(findbars:::RHSForm(formula))
lme4:::findbars(lme4:::RHSForm(formula))
lme4:::findbars(lme4:::RHSForm(test_formula))
lme4::mkReTrms(lme4:::findbars(lme4:::RHSForm(test_formula)))
data("Pixel", package="nlme")
mform <- pixel ~ day + I(day^2) + (day | Dog) + (1 | Side/Dog)
(bar.f <- findbars(mform)) # list with 3 terms
library(lme4)
(bar.f <- findbars(mform)) # list with 3 terms
mf <- model.frame(subbars(mform),data=Pixel)
rt <- mkReTrms(bar.f,mf)
names(rt)
rt
findbars(test_formula)
